<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>python爬虫猫眼前100</title>
    <link href="/2021/08/20/python%E7%88%AC%E8%99%AB%E7%8C%AB%E7%9C%BC%E5%89%8D100/"/>
    <url>/2021/08/20/python%E7%88%AC%E8%99%AB%E7%8C%AB%E7%9C%BC%E5%89%8D100/</url>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><blockquote><p><strong>通过python爬取猫眼Top 100电影信息，包含排名、电影名称、参演人员、上映时间、封面图；并将获取的数据写入数据库；</strong></p></blockquote><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote><p>解析网址信息—-&gt;xpath获取排名等信息—-&gt;存储数据到数据库</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始抓取数据...&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>):<br>        index = index_page(i)<span class="hljs-comment">#解析网址信息</span><br>        results = parse_pages(index)<span class="hljs-comment">#xpath获取排名等信息</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> results:<br>            save_results(j)<span class="hljs-comment">#存储数据到数据库</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;结束抓取数据...&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1、解析网址信息"><a href="#1、解析网址信息" class="headerlink" title="1、解析网址信息"></a>1、解析网址信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-comment">#模拟浏览器登录</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>    <span class="hljs-string">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 &#x27;</span><br>    <span class="hljs-string">&#x27;Safari/537.36&#x27;</span>&#125;<br><br><span class="hljs-comment">#解析网址信息</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index_page</span>(<span class="hljs-params">number</span>):</span><br>    url = <span class="hljs-string">&#x27;https://maoyan.com/board/4?offset=%s&#x27;</span> % number<br>    response = requests.get(url=url, headers=headers)<br>    <span class="hljs-keyword">return</span> response.text<br><br><span class="hljs-comment">#主函数</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始抓取数据...&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>):<span class="hljs-comment">#每页偏离10</span><br>        index = index_page(i)<span class="hljs-comment">#解析网址信息</span><br>        results = parse_pages(index)<span class="hljs-comment">#xpath获取排名等信息</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> results:<br>            save_results(j)<span class="hljs-comment">#存储数据到数据库</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;结束抓取数据...&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="2、xpath获取排名等信息"><a href="#2、xpath获取排名等信息" class="headerlink" title="2、xpath获取排名等信息"></a>2、xpath获取排名等信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-comment">#模拟浏览器登录</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>    <span class="hljs-string">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 &#x27;</span><br>    <span class="hljs-string">&#x27;Safari/537.36&#x27;</span>&#125;<br><br><span class="hljs-comment">#解析网址信息</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index_page</span>(<span class="hljs-params">number</span>):</span><br>    url = <span class="hljs-string">&#x27;https://maoyan.com/board/4?offset=%s&#x27;</span> % number<br>    response = requests.get(url=url, headers=headers)<br>    <span class="hljs-keyword">return</span> response.text<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parse_pages</span>(<span class="hljs-params">context</span>):</span><br>    tree = etree.HTML(context)<br>    <span class="hljs-comment"># 电影排名</span><br>    ranking = tree.xpath(<span class="hljs-string">&quot;//dd/i/text()&quot;</span>)<br>    <span class="hljs-comment"># 电影名字</span><br>    name = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;name&quot;]/a/text()&#x27;</span>)<br>    <span class="hljs-comment"># 主演</span><br>    performer = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;star&quot;]/text()&#x27;</span>)<br>    performer = [p.strip() <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> performer]<br>    <span class="hljs-comment"># 电影上映时间</span><br>    releasetime = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;releasetime&quot;]/text()&#x27;</span>)<br>    <span class="hljs-comment"># 评分</span><br>    score1 = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;score&quot;]/i[@class=&quot;integer&quot;]/text()&#x27;</span>)<br>    score2 = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;score&quot;]/i[@class=&quot;fraction&quot;]/text()&#x27;</span>)<br>    score = [[score1[i] + score2[i]]<br>             <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(score1), <span class="hljs-built_in">len</span>(score2)))]<br>    <span class="hljs-comment"># 封面图的链接</span><br>    movie_img = tree.xpath(<span class="hljs-string">&#x27;//img[@class=&quot;board-img&quot;]/@data-src&#x27;</span>)<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">zip</span>(ranking, name, performer, releasetime, score, movie_img)<br><br><span class="hljs-comment">#主函数</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始抓取数据...&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>):<span class="hljs-comment">#每页偏离10</span><br>        index = index_page(i)<span class="hljs-comment">#解析网址信息</span><br>        results = parse_pages(index)<span class="hljs-comment">#xpath获取排名等信息</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> results:<br>            save_results(j)<span class="hljs-comment">#存储数据到数据库</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;结束抓取数据...&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="3、存储数据到数据库"><a href="#3、存储数据到数据库" class="headerlink" title="3、存储数据到数据库"></a>3、存储数据到数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> pymysql<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><br><span class="hljs-comment"># 模拟浏览器登录</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>                  <span class="hljs-string">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 &#x27;</span><br>                  <span class="hljs-string">&#x27;Safari/537.36&#x27;</span>&#125;<br><br><br><span class="hljs-comment"># 解析网址信息</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index_page</span>(<span class="hljs-params">number</span>):</span><br>    url = <span class="hljs-string">&#x27;https://maoyan.com/board/4?offset=%s&#x27;</span> % number<br>    response = requests.get(url=url, headers=headers)<br>    <span class="hljs-keyword">return</span> response.text<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parse_pages</span>(<span class="hljs-params">context</span>):</span><br>    tree = etree.HTML(context)<br>    <span class="hljs-comment"># 电影排名</span><br>    ranking = tree.xpath(<span class="hljs-string">&quot;//dd/i/text()&quot;</span>)<br>    <span class="hljs-comment"># 电影名字</span><br>    name = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;name&quot;]/a/text()&#x27;</span>)<br>    <span class="hljs-comment"># 主演</span><br>    performer = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;star&quot;]/text()&#x27;</span>)<br>    performer = [p.strip() <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> performer]<br>    <span class="hljs-comment"># 电影上映时间</span><br>    releasetime = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;releasetime&quot;]/text()&#x27;</span>)<br>    <span class="hljs-comment"># 评分</span><br>    score1 = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;score&quot;]/i[@class=&quot;integer&quot;]/text()&#x27;</span>)<br>    score2 = tree.xpath(<span class="hljs-string">&#x27;//p[@class=&quot;score&quot;]/i[@class=&quot;fraction&quot;]/text()&#x27;</span>)<br>    score = [[score1[i] + score2[i]]<br>             <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(score1), <span class="hljs-built_in">len</span>(score2)))]<br>    <span class="hljs-comment"># 封面图的链接</span><br>    movie_img = tree.xpath(<span class="hljs-string">&#x27;//img[@class=&quot;board-img&quot;]/@data-src&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">zip</span>(ranking, name, performer, releasetime, score, movie_img)<br><br><br><span class="hljs-comment"># 存储数据到数据库</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">save_results</span>(<span class="hljs-params">result</span>):</span><br>    <span class="hljs-comment"># 1. 创建数据库连接对象</span><br>    con = pymysql.connect(host=<span class="hljs-string">&#x27;localhost&#x27;</span>, port=<span class="hljs-number">3306</span>,<br>                          database=<span class="hljs-string">&#x27;maoyan&#x27;</span>, charset=<span class="hljs-string">&#x27;utf8mb4&#x27;</span>,<br>                          user=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;root&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        response = requests.get(result[<span class="hljs-number">5</span>], headers=headers).content<br>        <span class="hljs-comment"># 2. 通过连接对象获取游标</span><br>        <span class="hljs-keyword">with</span> con.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 3. 通过游标执行SQL并获得执行结果</span><br>            <span class="hljs-comment"># print(list(map(float, result[4]))[0])</span><br>            sql = <span class="hljs-string">&quot;insert into tb_my values (&#x27;&#123;0&#125;&#x27;, &#x27;&#123;1&#125;&#x27;, &#x27;&#123;2&#125;&#x27;,&#x27;&#123;3&#125;&#x27;, &#x27;&#123;4&#125;&#x27;, &#x27;&#123;5&#125;&#x27;, %s)&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">int</span>(<br>                result[<span class="hljs-number">0</span>]), result[<span class="hljs-number">1</span>], result[<span class="hljs-number">2</span>], result[<span class="hljs-number">3</span>], <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">float</span>, result[<span class="hljs-number">4</span>]))[<span class="hljs-number">0</span>], result[<span class="hljs-number">5</span>])<br>            result = cursor.execute(sql, response)<br>            <span class="hljs-keyword">if</span> result == <span class="hljs-number">1</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;写入成功!&#x27;</span>)<br>            <span class="hljs-comment"># 4. 操作成功提交事务</span><br>            con.commit()<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-comment"># 5. 关闭连接释放资源</span><br>        con.close()<br><br><br><span class="hljs-comment"># 主函数</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始抓取数据...&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>):  <span class="hljs-comment"># 每页偏离10</span><br>        index = index_page(i)  <span class="hljs-comment"># 解析网址信息</span><br>        results = parse_pages(index)  <span class="hljs-comment"># xpath获取排名等信息</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> results:<br>            save_results(j)  <span class="hljs-comment"># 存储数据到数据库</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;结束抓取数据...&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo-github博客部署</title>
    <link href="/2021/08/16/hexo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"/>
    <url>/2021/08/16/hexo-github%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p><strong>环境搭建</strong></p><h1 id="1、安装git"><a href="#1、安装git" class="headerlink" title="1、安装git"></a>1、安装git</h1><p>1)下载地址：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a><br>2).安装：双击安装，一直点击下一步即可</p><p><strong>注：</strong></p><p>报错：’git’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。</p><p>解决方法：</p><p>我的电脑右键-属性-高级系统设置-环境变量-在系统变量中找到path-新建-输入自己git.exe的路径；</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">D:<span class="hljs-symbol">\g</span>it<span class="hljs-symbol">\G</span>it<span class="hljs-symbol">\b</span>in <br></code></pre></td></tr></table></figure><h1 id="2、安装node-js"><a href="#2、安装node-js" class="headerlink" title="2、安装node.js"></a>2、安装node.js</h1><p>1)下载地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a><br>2).安装：双击安装，一直点击下一步即可</p><h1 id="3、安装hexo"><a href="#3、安装hexo" class="headerlink" title="3、安装hexo"></a>3、安装hexo</h1><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure><h2 id="3-1-初始化blog"><a href="#3-1-初始化blog" class="headerlink" title="3.1 初始化blog"></a>3.1 初始化blog</h2><p>比较推荐大家按照cmder软件；</p><p>首先新建博客文件夹blog，切换目录至博客；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> blog<br></code></pre></td></tr></table></figure><p>创建并初始化博客文件夹blog</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> blog<br></code></pre></td></tr></table></figure><h2 id="3-2-测试运行"><a href="#3-2-测试运行" class="headerlink" title="3.2 测试运行"></a>3.2 测试运行</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo <span class="hljs-keyword">generate</span> <br></code></pre></td></tr></table></figure><h2 id="3-3-启动blog：本地预览"><a href="#3-3-启动blog：本地预览" class="headerlink" title="3.3 启动blog：本地预览"></a>3.3 启动blog：本地预览</h2><p>文件夹中出现一个public的文件夹，public的文件夹是hexo生成的一个完整的静态网站；</p><p>运行以下命令预览本地博客：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>本地blog创建完成，默认通过127.0.0.1:4000访问。<br>如果你不喜欢默认主题，可根据下面介绍换上其他漂亮的皮肤</p><h2 id="3-4-替换主题"><a href="#3-4-替换主题" class="headerlink" title="3.4 替换主题"></a>3.4 替换主题</h2><p>可以在<a href="https://hexo.io/themes/">hexo官网</a>查看自己喜欢的主题<br>通过git clone [url] themes/xxx 将主题克隆到本地，<br>修改 <code>/blog/_config.yml</code> 中的theme</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid<br></code></pre></td></tr></table></figure><p>然后再</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">hexo clean <span class="hljs-meta">&amp;&amp; hexo g &amp;&amp; hexo s  <span class="hljs-comment">// g就是generate缩写  d就是deploy 远程部署</span></span><br></code></pre></td></tr></table></figure><p>本地重载，就可以再localhost:4000查看部署情况</p><h1 id="4、写文章"><a href="#4、写文章" class="headerlink" title="4、写文章"></a>4、写文章</h1><p>文章在 <code>blog/source/_posts/</code> 下，以markdown格式写成，推荐使用<code>typerora</code>作为编写工具。</p><p>推荐使用 <code>hexo new 文章名</code> 来创建一篇文章<br>执行命令 仍是在 <code>blog</code> 目录下，打开 <code>cmder</code> 命令框。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 创建一个标题为“xxx”的文章</span><br>hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;git教程&quot;</span><br></code></pre></td></tr></table></figure><p>然后使用typeora编写即可</p><h1 id="5、搭建github-pages"><a href="#5、搭建github-pages" class="headerlink" title="5、搭建github pages"></a>5、搭建github pages</h1><p>想让博客出现在互联网上，有两种选择：</p><p>A:搭建服务器</p><p>B:使用网站托管等静态网站展现方式</p><h2 id="5-1-注册github账户"><a href="#5-1-注册github账户" class="headerlink" title="5.1 注册github账户"></a>5.1 注册github账户</h2><p>到<a href="https://github.com/">github官网</a>注册一个github账户</p><h2 id="5-2-配置登录免密码"><a href="#5-2-配置登录免密码" class="headerlink" title="5.2 配置登录免密码"></a>5.2 配置登录免密码</h2><h2 id="5-3-创建github远程仓库"><a href="#5-3-创建github远程仓库" class="headerlink" title="5.3 创建github远程仓库"></a>5.3 创建github远程仓库</h2><p>在github上创建一个仓库 <code>用户名.github.io</code></p><h2 id="5-4-配置Hexo"><a href="#5-4-配置Hexo" class="headerlink" title="5.4 配置Hexo"></a>5.4 配置Hexo</h2><p>修改 <code>_config.yml</code>,配置远程部署</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">   type:</span> git<br><span class="hljs-symbol">   repo:</span> git@github.com:xxx/xxx.github.io.git<br><span class="hljs-symbol">   branch:</span> master<br></code></pre></td></tr></table></figure><h2 id="5-5-安装git部署插件"><a href="#5-5-安装git部署插件" class="headerlink" title="5.5 安装git部署插件"></a>5.5 安装git部署插件</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h2 id="5-6-远程部署"><a href="#5-6-远程部署" class="headerlink" title="5.6  远程部署"></a>5.6  远程部署</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo deploy</span><br></code></pre></td></tr></table></figure><h2 id="5-7-测试"><a href="#5-7-测试" class="headerlink" title="5.7 测试"></a>5.7 测试</h2><p>打开 <code>xxx.github.io</code> ，就能看到你的blog了</p><blockquote><p><strong>存在问题：GitHub Pages 只能被谷歌收录，无法被百度收录</strong></p></blockquote><h1 id="6、搭建图床"><a href="#6、搭建图床" class="headerlink" title="6、搭建图床"></a>6、搭建图床</h1><p>GitHub 图床是个不错的选择，利用 jsDelivr CDN 加速访问（一个免费开源的 CDN 解决方案），PicGo 工具一键上传，操作简单高效，目前免费图床的最佳解决方案！</p><ol><li><p>登录/注册GitHub，新建一个仓库，填写好仓库名，仓库描述，仓库初始化</p></li><li><p>在主页选择Settings-Developer settings-Personal access tokens-Generate new token, 填写好描述，勾选repo，然后点击Generate token生成一个Token，</p><blockquote><p>注意这个Token只会显示一次，自己先保存下来 </p></blockquote></li><li><p>下载<a href="https://github.com/Molunerfinn/picgo/releases">Releases · Molunerfinn/PicGo (github.com)</a></p></li><li><p>配置PicGo</p><p><img src="https://cdn.jsdelivr.net/gh/Ah-yuan/blogimg/blog_img/tc_config.jpg"></p><blockquote><p>设定仓库名：按照【用户名/图床仓库名】的格式填写</p><p>设定分支名：【master】</p><p>设定Token：粘贴之前生成的【Token】</p><p>指定存储路径：填写想要储存的路径，如【ITRHX-PIC/】，这样就会在仓库下创建一个名为 ITRHX-PIC 的文件夹，图片将会储存在此文件夹中</p><p>设定自定义域名：它的作用是，在图片上传后，PicGo 会按照【自定义域名+储存路径+上传的图片名】的方式生成访问链接，并放到粘贴板上;在编写文档时，只需要粘贴链接（<a href="https://cdn.jsdelivr.net/gh/Ah-yuan/blogimg/blog_img/tc_config.jpg)%E5%8D%B3%E5%8F%AF%E5%9C%A8%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E6%98%BE%E7%A4%BA">https://cdn.jsdelivr.net/gh/Ah-yuan/blogimg/blog_img/tc_config.jpg)即可在静态网站显示</a></p></blockquote></li></ol><h1 id="7、搭建gitee-pages"><a href="#7、搭建gitee-pages" class="headerlink" title="7、搭建gitee pages"></a>7、搭建gitee pages</h1><p>在gitee主页注册账号：<a href="https://gitee.com/signup">注册 - Gitee.com</a></p><p>1）把 GitHub Pages 仓库复制到码云。</p><p>登录码云，点击右上角的 + 号，选择「新建仓库」，点击「导入仓库」，选择从github导入，跳出 GitHub 认证；</p><p>2）启用码云 Pages。<br>在菜单栏找到服务，选择「Gitee Pages」，点击「启动」</p><p>可以直接点击码云 Page 生成的网站地址进行访问，可以确认 GitHub Pages 已经成功同步到码云 Pages 了。</p>]]></content>
    
    
    <categories>
      
      <category>blog</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python实战-廖雪峰-代码解析（四）</title>
    <link href="/2021/08/14/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <url>/2021/08/14/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="10、编写日志创建页"><a href="#10、编写日志创建页" class="headerlink" title="10、编写日志创建页"></a>10、编写日志创建页</h1><p>编写一个REST API，用于创建一个Blog</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#handlers.py新增</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check_admin</span>(<span class="hljs-params">request</span>):</span><br>    <span class="hljs-keyword">if</span> request.__user__ <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> request.__user__.admin:<br>        <span class="hljs-keyword">raise</span> APIPermissionError()<br><span class="hljs-comment">#MVC使得界面可达</span><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/blogs/create&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_create_blog</span>():</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_blog_edit.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;/api/blogs&#x27;</span>  <span class="hljs-comment"># 对应HTML页面中VUE的action名字</span><br>    &#125;<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_create_blog</span>(<span class="hljs-params">request, *, name, summary, content</span>):</span><br>    check_admin(request)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> name.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;name cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> summary <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> summary.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;summary&#x27;</span>, <span class="hljs-string">&#x27;summary cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> content <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> content.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;content&#x27;</span>, <span class="hljs-string">&#x27;content cannot be empty.&#x27;</span>)<br>    blog = Blog(user_id=request.__user__.<span class="hljs-built_in">id</span>, user_name=request.__user__.name, user_image=request.__user__.image,<br>                name=name.strip(), summary=summary.strip(), content=content.strip())<br>    <span class="hljs-keyword">await</span> blog.save()<br>    <span class="hljs-comment"># 返回一个dict,没有模板，会把信息直接显示出来</span><br>    <span class="hljs-keyword">return</span> blog<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_blogs</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    page_index = get_page_index(page)<br>    blogs_count = <span class="hljs-keyword">await</span> Blog.findNumber(<span class="hljs-string">&#x27;count(id)&#x27;</span>)<br>    p = Page(blogs_count, page_index)<br>    <span class="hljs-keyword">if</span> blogs_count == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, blogs=())<br>    blogs = <span class="hljs-keyword">await</span> Blog.findAll(orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>, limit=(p.offset, p.limit))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, blogs=blogs)<br></code></pre></td></tr></table></figure><p>manage_blog_edit.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;编辑日志&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">var</span></span><br><span class="javascript">    ID = <span class="hljs-string">&#x27;&#123;&#123; id &#125;&#125;&#x27;</span>,</span><br><span class="javascript">    action = <span class="hljs-string">&#x27;&#123;&#123; action &#125;&#125;&#x27;</span>;</span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initVM</span>(<span class="hljs-params">blog</span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">    <span class="hljs-comment">// 前面不加var表示这还是一个全局变量，否则是一个局部变量</span></span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: blog,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">submit</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</span><br><span class="javascript">                event.preventDefault();</span><br><span class="javascript">                <span class="hljs-keyword">var</span> $form = $(<span class="hljs-string">&#x27;#vm&#x27;</span>).find(<span class="hljs-string">&#x27;form&#x27;</span>);</span><br><span class="javascript">                $form.postJSON(action, <span class="hljs-built_in">this</span>.$data, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, r</span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                        $form.showFormError(err);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                    <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                        alert(<span class="hljs-string">&#x27;创建成功!&#x27;</span>)</span><br><span class="javascript">                        <span class="hljs-keyword">return</span> location.assign(<span class="hljs-string">&#x27;/manage/blogs&#x27;</span>);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    $(<span class="hljs-string">&#x27;#vm&#x27;</span>).show();</span><br><span class="javascript">&#125;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">if</span> (ID) &#123;</span><br><span class="javascript">        getJSON(<span class="hljs-string">&#x27;/api/blogs/&#x27;</span> + ID, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, blog</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                <span class="hljs-keyword">return</span> fatal(err);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">            initVM(blog);</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">    <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">        initVM(&#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">content</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">        &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-margin-bottom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-breadcrumb&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/comments&quot;</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs&quot;</span>&gt;</span>日志<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/users&quot;</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-text-center&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-spinner uk-icon-medium uk-icon-spin&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;submit: submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form uk-form-stacked&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-alert uk-alert-danger uk-hidden&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>标题:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>摘要:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;summary&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;summary&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;摘要&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;resize:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>内容:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;16&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;resize:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button uk-button-primary&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-save&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 保存<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-times&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 取消<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><p>需手动在数据库中将用户设置为管理员</p><blockquote><p>修改admin字段为1</p></blockquote><h1 id="11、编写日志列表页"><a href="#11、编写日志列表页" class="headerlink" title="11、编写日志列表页"></a>11、编写日志列表页</h1><p>在<code>handlers.py</code>中新增实现API：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#管理页面</span><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/blogs&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_blogs</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_blogs.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;page_index&#x27;</span>: get_page_index(page)<br>    &#125;<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/delete/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_delete_blog</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>, request</span>):</span><br>    logging.info(<span class="hljs-string">&#x27;删除博客的ID为：%s&#x27;</span> % <span class="hljs-built_in">id</span>)<br>    check_admin(request)<br>    b = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">if</span> b <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">raise</span> APIResourceNotFoundError(<span class="hljs-string">&#x27;Blog&#x27;</span>)<br>    <span class="hljs-keyword">await</span> b.remove()<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">id</span>=<span class="hljs-built_in">id</span>)<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/modify&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_modify_blog</span>(<span class="hljs-params">request, *, <span class="hljs-built_in">id</span>, name, summary, content</span>):</span><br>    logging.info(<span class="hljs-string">&#x27;修改的博客的ID为：%s&#x27;</span> % <span class="hljs-built_in">id</span>)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> name.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;name cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> summary <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> summary.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;summary&#x27;</span>, <span class="hljs-string">&#x27;summary cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> content <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> content.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;content&#x27;</span>, <span class="hljs-string">&#x27;content cannot be empty.&#x27;</span>)<br><br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    blog.name = name<br>    blog.summary = summary<br>    blog.content = content<br><br>    <span class="hljs-keyword">await</span> blog.update()<br>    <span class="hljs-keyword">return</span> blog<br><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/blogs/modify/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_modify_blog</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_blog_modify.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>,<br>        <span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;/api/blogs/modify&#x27;</span><br>    &#125;<br></code></pre></td></tr></table></figure><p>模板页面首先通过API：<code>GET /api/blogs?page=?</code>拿到Model,然后，通过Vue初始化MVVM：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;日志&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initVM</span>(<span class="hljs-params">data</span>) </span>&#123;</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(data)</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">blogs</span>: data.blogs,</span><br><span class="javascript">            <span class="hljs-attr">page</span>: data.page</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">edit_blog</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">blog</span>) </span>&#123;</span><br><span class="javascript">                location.assign(<span class="hljs-string">&#x27;/manage/blogs/modify/&#x27;</span> + blog.id);</span><br><span class="javascript">            &#125;,</span><br><span class="javascript">            <span class="hljs-attr">delete_blog</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">blog</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (confirm(<span class="hljs-string">&#x27;确认要删除“&#x27;</span> + blog.name + <span class="hljs-string">&#x27;”？删除后不可恢复！&#x27;</span>)) &#123;</span><br><span class="javascript">                    postJSON(<span class="hljs-string">&#x27;/api/blogs/delete/&#x27;</span> + blog.id , <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, r</span>) </span>&#123;</span><br><span class="javascript">                        <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                            <span class="hljs-keyword">return</span> alert(err.message || err.error || err);</span><br><span class="javascript">                        &#125;</span><br><span class="javascript">                        refresh();</span><br><span class="javascript">                    &#125;);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    $(<span class="hljs-string">&#x27;#vm&#x27;</span>).show();</span><br><span class="javascript">&#125;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    getJSON(<span class="hljs-string">&#x27;/api/blogs&#x27;</span>, &#123;</span><br><span class="javascript">        <span class="hljs-attr">page</span>: &#123;&#123; page_index &#125;&#125;</span><br><span class="javascript">    &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, results</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> fatal(err);</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;page_index is &#x27;</span>);</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(&#123;&#123;page_index&#125;&#125;);</span><br><span class="javascript">        initVM(results);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-margin-bottom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-breadcrumb&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/comments&quot;</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>日志<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/users&quot;</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-text-center&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-spinner uk-icon-medium uk-icon-spin&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs/create&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button uk-button-primary&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-plus&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 新日志<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-table uk-table-hover&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-5-10&quot;</span>&gt;</span>标题<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-10&quot;</span>&gt;</span>作者<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-10&quot;</span>&gt;</span>创建时间<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-10&quot;</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">v-repeat</span>=<span class="hljs-string">&quot;blog: blogs&quot;</span> &gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">v-attr</span>=<span class="hljs-string">&quot;href: &#x27;/blog/&#x27;+blog.id&quot;</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;blog.name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">v-attr</span>=<span class="hljs-string">&quot;href: &#x27;/user/&#x27;+blog.user_id&quot;</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;blog.user_name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;blog.created_at.toDateTime()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#0&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;click: edit_blog(blog)&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-edit&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#0&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;click: delete_blog(blog)&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-trash-o&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-component</span>=<span class="hljs-string">&quot;pagination&quot;</span> <span class="hljs-attr">v-with</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><h1 id="12、补充功能"><a href="#12、补充功能" class="headerlink" title="12、补充功能"></a>12、补充功能</h1><h2 id="12-1修改首页显示"><a href="#12-1修改首页显示" class="headerlink" title="12.1修改首页显示"></a>12.1修改首页显示</h2><p>修改handlers.py中首页显示实际blog条目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    <span class="hljs-comment"># summary = &quot;Lorem ipsum dolor sit amet, consectetur adipisicing elit,&quot; \</span><br>    <span class="hljs-comment">#           &quot; sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment"># blogs = [</span><br>    <span class="hljs-comment">#     Blog(id=&#x27;1&#x27;, name=&#x27;Test Blog&#x27;, summary=summary, created_at=time.time() - 120),</span><br>    <span class="hljs-comment">#     Blog(id=&#x27;2&#x27;, name=&#x27;Something New&#x27;, summary=summary, created_at=time.time() - 3600),</span><br>    <span class="hljs-comment">#     Blog(id=&#x27;3&#x27;, name=&#x27;Learn Swift&#x27;, summary=summary, created_at=time.time() - 7200)</span><br>    <span class="hljs-comment"># ]</span><br>    page_index = get_page_index(page)<br>    <span class="hljs-comment"># 查找博客表里的条目数</span><br>    num = <span class="hljs-keyword">await</span> Blog.findNumber(<span class="hljs-string">&#x27;count(id)&#x27;</span>)<br>    <span class="hljs-comment"># 没有条目则不显示</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> num <span class="hljs-keyword">or</span> num == <span class="hljs-number">0</span>:<br>        logging.info(<span class="hljs-string">&#x27;the type of num is :%s&#x27;</span> % <span class="hljs-built_in">type</span>(num))<br>        blogs = []<br>    <span class="hljs-keyword">else</span>:<br>        page = Page(num, page_index)<br>        <span class="hljs-comment"># 根据计算出来的offset(取的初始条目index)和limit(取的条数)，来取出条目</span><br>        <span class="hljs-comment"># 首页只显示前5篇文章</span><br>        blogs = <span class="hljs-keyword">await</span> Blog.findAll(orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>, limit=(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>))<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;blogs.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;page&#x27;</span>: page,<br>        <span class="hljs-string">&#x27;blogs&#x27;</span>: blogs<br>        <span class="hljs-comment"># &#x27;__template__&#x27;指定的模板文件是blogs.html，其他参数是传递给模板的数据</span><br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="12-2增添用户登出"><a href="#12-2增添用户登出" class="headerlink" title="12.2增添用户登出"></a>12.2增添用户登出</h2><p>handlers.py中，增加登出api</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">@<span class="hljs-builtin-name">get</span>(<span class="hljs-string">&#x27;/signout&#x27;</span>)<br>def signout(request):<br>    referer = request.headers.<span class="hljs-builtin-name">get</span>(<span class="hljs-string">&#x27;Referer&#x27;</span>)<br>    r = web.HTTPFound(referer <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;/&#x27;</span>)<br>    # 清理掉cookie来退出账户<br>    r.set_cookie(COOKIE_NAME, <span class="hljs-string">&#x27;-deleted-&#x27;</span>, <span class="hljs-attribute">max_age</span>=0, <span class="hljs-attribute">httponly</span>=<span class="hljs-literal">True</span>)<br>    logging.<span class="hljs-builtin-name">info</span>(<span class="hljs-string">&#x27;user signed out.&#x27;</span>)<br>    return r<br></code></pre></td></tr></table></figure><h2 id="12-3增添用户管理"><a href="#12-3增添用户管理" class="headerlink" title="12.3增添用户管理"></a>12.3增添用户管理</h2><p>handlers.py中，增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/users&#x27;</span></span>)</span><span class="hljs-comment">#管理用户</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_users</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_users.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;page_index&#x27;</span>: get_page_index(page)<br>    &#125;<br></code></pre></td></tr></table></figure><p>manage_users.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;用户&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initVM</span>(<span class="hljs-params">data</span>) </span>&#123;</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(data)</span><br><span class="javascript">    $(<span class="hljs-string">&#x27;#vm&#x27;</span>).show();</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">users</span>: data.users,</span><br><span class="javascript">            <span class="hljs-attr">page</span>: data.page</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    getJSON(<span class="hljs-string">&#x27;/api/users&#x27;</span>, &#123;</span><br><span class="javascript">        <span class="hljs-attr">page</span>: &#123;&#123; page_index &#125;&#125;</span><br><span class="javascript">    &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, results</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> fatal(err);</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;page_index is &#x27;</span>);</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(&#123;&#123;page_index&#125;&#125;);</span><br><span class="javascript">        initVM(results);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-margin-bottom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-breadcrumb&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/comments&quot;</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs&quot;</span>&gt;</span>日志<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-text-center&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-spinner uk-icon-medium uk-icon-spin&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-table uk-table-hover&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-4-10&quot;</span>&gt;</span>名字<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-4-10&quot;</span>&gt;</span>电子邮件<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-10&quot;</span>&gt;</span>注册时间<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">v-repeat</span>=<span class="hljs-string">&quot;user: users&quot;</span> &gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;user.name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;user.admin&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:#d05&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-key&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 管理员<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-attr</span>=<span class="hljs-string">&quot;href: &#x27;mailto:&#x27;+user.email&quot;</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;user.email&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;user.created_at.toDateTime()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-component</span>=<span class="hljs-string">&quot;pagination&quot;</span> <span class="hljs-attr">v-with</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><h2 id="12-4增添博客管理"><a href="#12-4增添博客管理" class="headerlink" title="12.4增添博客管理"></a>12.4增添博客管理</h2><p>添加markdown.py，将博客内容转化为markdown格式；</p><p>handlers.py中，增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">text2html</span>(<span class="hljs-params">text</span>):</span><br>    <span class="hljs-comment"># HTML转义字符</span><br>    <span class="hljs-comment"># &quot;&amp;quot;</span><br>    <span class="hljs-comment"># &amp; &amp;amp;</span><br>    <span class="hljs-comment"># &lt; &amp;lt;</span><br>    <span class="hljs-comment"># &gt; &amp;gt;</span><br>    <span class="hljs-comment"># 不断开空格&amp;nbsp;</span><br><br>    lines = <span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> s: <span class="hljs-string">&#x27;&lt;p&gt;%s&lt;/p&gt;&#x27;</span> % s.replace(<span class="hljs-string">&#x27;&amp;&#x27;</span>, <span class="hljs-string">&#x27;%amp;&#x27;</span>).replace(<span class="hljs-string">&#x27;&lt;&#x27;</span>, <span class="hljs-string">&#x27;&amp;alt;&#x27;</span>).replace(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-string">&#x27;&amp;gt;&#x27;</span>),<br>                <span class="hljs-built_in">filter</span>(<span class="hljs-keyword">lambda</span> s: s.strip() != <span class="hljs-string">&#x27;&#x27;</span>, text.split(<span class="hljs-string">&#x27;\n&#x27;</span>)))<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join(lines)<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/blog/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_blog</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):</span><br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    comments = <span class="hljs-keyword">await</span> Comment.findAll(<span class="hljs-string">&#x27;blog_id=?&#x27;</span>, [<span class="hljs-built_in">id</span>], orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>)<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> comments:<br>        c.html_content = text2html(c.content)<br>    blog.html_content = markdown2.markdown(blog.content)<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;blog.html&#x27;</span>,<br>        <span class="hljs-string">&quot;blog&quot;</span>: blog,<br>        <span class="hljs-string">&#x27;comments&#x27;</span>: comments<br>    &#125;<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_get_blog</span>(<span class="hljs-params">*, <span class="hljs-built_in">id</span></span>):</span><br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">return</span> blog<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/blogs/create&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_create_blog</span>():</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_blog_edit.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;/api/blogs&#x27;</span>  <span class="hljs-comment"># 对应HTML页面中VUE的action名字</span><br>    &#125;<br><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/blogs&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_blogs</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_blogs.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;page_index&#x27;</span>: get_page_index(page)<br>    &#125;<br><br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_create_blog</span>(<span class="hljs-params">request, *, name, summary, content</span>):</span><br>    check_admin(request)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> name.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;name cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> summary <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> summary.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;summary&#x27;</span>, <span class="hljs-string">&#x27;summary cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> content <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> content.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;content&#x27;</span>, <span class="hljs-string">&#x27;content cannot be empty.&#x27;</span>)<br>    blog = Blog(user_id=request.__user__.<span class="hljs-built_in">id</span>, user_name=request.__user__.name, user_image=request.__user__.image,<br>                name=name.strip(), summary=summary.strip(), content=content.strip())<br>    <span class="hljs-keyword">await</span> blog.save()<br>    <span class="hljs-comment"># 返回一个dict,没有模板，会把信息直接显示出来</span><br>    <span class="hljs-keyword">return</span> blog<br><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_blogs</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    page_index = get_page_index(page)<br>    blogs_count = <span class="hljs-keyword">await</span> Blog.findNumber(<span class="hljs-string">&#x27;count(id)&#x27;</span>)<br>    p = Page(blogs_count, page_index)<br>    <span class="hljs-keyword">if</span> blogs_count == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, blogs=())<br>    blogs = <span class="hljs-keyword">await</span> Blog.findAll(orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>, limit=(p.offset, p.limit))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, blogs=blogs)<br><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/blog/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_blog</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):</span><br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    comments = <span class="hljs-keyword">await</span> Comment.findAll(<span class="hljs-string">&#x27;blog_id=?&#x27;</span>, [<span class="hljs-built_in">id</span>], orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>)<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> comments:<br>        c.html_content = text2html(c.content)<br>    blog.html_content = markdown2.markdown(blog.content)<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;blog.html&#x27;</span>,<br>        <span class="hljs-string">&quot;blog&quot;</span>: blog,<br>        <span class="hljs-string">&#x27;comments&#x27;</span>: comments<br>    &#125;<br><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_get_blog</span>(<span class="hljs-params">*, <span class="hljs-built_in">id</span></span>):</span><br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">return</span> blog<br><br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/delete/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_delete_blog</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>, request</span>):</span><br>    logging.info(<span class="hljs-string">&#x27;删除博客的ID为：%s&#x27;</span> % <span class="hljs-built_in">id</span>)<br>    check_admin(request)<br>    b = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">if</span> b <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">raise</span> APIResourceNotFoundError(<span class="hljs-string">&#x27;Blog&#x27;</span>)<br>    <span class="hljs-keyword">await</span> b.remove()<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">id</span>=<span class="hljs-built_in">id</span>)<br><br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/modify&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_modify_blog</span>(<span class="hljs-params">request, *, <span class="hljs-built_in">id</span>, name, summary, content</span>):</span><br>    logging.info(<span class="hljs-string">&#x27;修改的博客的ID为：%s&#x27;</span> % <span class="hljs-built_in">id</span>)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> name.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;name cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> summary <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> summary.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;summary&#x27;</span>, <span class="hljs-string">&#x27;summary cannot be empty.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> content <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> content.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;content&#x27;</span>, <span class="hljs-string">&#x27;content cannot be empty.&#x27;</span>)<br><br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    blog.name = name<br>    blog.summary = summary<br>    blog.content = content<br><br>    <span class="hljs-keyword">await</span> blog.update()<br>    <span class="hljs-keyword">return</span> blog<br><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/blogs/modify/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_modify_blog</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_blog_modify.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>,<br>        <span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;/api/blogs/modify&#x27;</span><br>    &#125;<br><br></code></pre></td></tr></table></figure><p>blog.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;&#123;&#123; blog.name &#125;&#125;&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">var</span> comment_url = <span class="hljs-string">&#x27;/api/blogs/&#123;&#123; blog.id &#125;&#125;/comments&#x27;</span>;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> $form = $(<span class="hljs-string">&#x27;#form-comment&#x27;</span>);</span><br><span class="javascript">    $form.submit(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        e.preventDefault();</span><br><span class="javascript">        $form.showFormError(<span class="hljs-string">&#x27;&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">var</span> content = $form.find(<span class="hljs-string">&#x27;textarea&#x27;</span>).val().trim();</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (content===<span class="hljs-string">&#x27;&#x27;</span>) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> $form.showFormError(<span class="hljs-string">&#x27;请输入评论内容！&#x27;</span>);</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        $form.postJSON(comment_url, &#123; <span class="hljs-attr">content</span>: content &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, result</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                <span class="hljs-keyword">return</span> $form.showFormError(err);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            refresh();</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-medium-3-4&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; blog.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-meta&quot;</span>&gt;</span>发表于&#123;&#123; blog.created_at|datetime &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; blog.html_content|safe &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-divider&quot;</span>&gt;</span><br><br>    &#123;% if __user__ %&#125;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>发表评论<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-header&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-avatar uk-border-circle&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;30&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123; __user__.image &#125;&#125;&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-title&quot;</span>&gt;</span>&#123;&#123; __user__.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-body&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;form-comment&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-alert uk-alert-danger uk-hidden&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;说点什么吧&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%;resize:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button uk-button-primary&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-comment&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 发表评论<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-divider&quot;</span>&gt;</span><br>    &#123;% endif %&#125;<br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>最新评论<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-list&quot;</span>&gt;</span><br>            &#123;% for comment in comments %&#125;<br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-header&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-avatar uk-border-circle&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123; comment.user_image &#125;&#125;&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-title&quot;</span>&gt;</span>&#123;&#123; comment.user_name &#125;&#125; &#123;% if comment.user_id==blog.user_id %&#125;(作者)&#123;% endif %&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-meta&quot;</span>&gt;</span>&#123;&#123; comment.created_at|datetime &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-comment-body&quot;</span>&gt;</span><br>                        &#123;&#123; comment.html_content|safe &#125;&#125;<br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            &#123;% else %&#125;<br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>还没有人评论...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            &#123;% endfor %&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-medium-1-4&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-text-center&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-border-circle&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;120&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;120&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123; blog.user_image &#125;&#125;&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>&#123;&#123; blog.user_name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-header&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel-title&quot;</span>&gt;</span>友情链接<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-list uk-list-line&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-link&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>编程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-link&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>思考<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-link&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>读书<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><p>manage_blog_modify.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;修改日志&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">var</span></span><br><span class="javascript">    ID = <span class="hljs-string">&#x27;&#123;&#123; id &#125;&#125;&#x27;</span>,</span><br><span class="javascript">    action = <span class="hljs-string">&#x27;&#123;&#123; action &#125;&#125;&#x27;</span>; <span class="hljs-comment">//在handlers处理函数的返回值中定义</span></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initVM</span>(<span class="hljs-params">blog</span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: blog,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">submit</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</span><br><span class="javascript">                event.preventDefault();</span><br><span class="javascript">                <span class="hljs-keyword">var</span> $form = $(<span class="hljs-string">&#x27;#vm&#x27;</span>).find(<span class="hljs-string">&#x27;form&#x27;</span>);</span><br><span class="javascript">                $form.postJSON(action, <span class="hljs-built_in">this</span>.$data, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, r</span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                        $form.showFormError(err);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                    <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">                        <span class="hljs-keyword">return</span> location.assign(<span class="hljs-string">&#x27;/manage/blogs&#x27;</span>);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    $(<span class="hljs-string">&#x27;#vm&#x27;</span>).show();</span><br><span class="javascript">&#125;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">if</span> (ID) &#123;</span><br><span class="javascript">        getJSON(<span class="hljs-string">&#x27;/api/blogs/&#x27;</span> + ID, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, blog</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                <span class="hljs-keyword">return</span> fatal(err);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">            initVM(blog);</span><br><span class="javascript">        &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">    <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">        initVM(&#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">summary</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">content</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">        &#125;);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-margin-bottom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-breadcrumb&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/comments&quot;</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs&quot;</span>&gt;</span>日志<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/users&quot;</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-text-center&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-spinner uk-icon-medium uk-icon-spin&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;submit: submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form uk-form-stacked&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-alert uk-alert-danger uk-hidden&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>标题:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>摘要:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;summary&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;summary&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;摘要&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;resize:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>内容:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;16&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;resize:none;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button uk-button-primary&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-save&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 保存<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-times&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 取消<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><h2 id="12-5增添评论管理"><a href="#12-5增添评论管理" class="headerlink" title="12.5增添评论管理"></a>12.5增添评论管理</h2><p>handlers.py中，增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage</span>():</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;redirect:/manage/comments&#x27;</span><br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/manage/comments&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">manage_commets</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;manage_comments.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;page_index&#x27;</span>: get_page_index(page)<br>    &#125;<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/api/comments&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_comments</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    page_index = get_page_index(page)<br>    num = <span class="hljs-keyword">await</span> Comment.findNumber(<span class="hljs-string">&#x27;count(id)&#x27;</span>)<br>    p = Page(num, page_index)<br>    <span class="hljs-keyword">if</span> num == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, comments=())<br>    comments = <span class="hljs-keyword">await</span> Comment.findAll(orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>, limit=(p.offset, p.limit))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, comments=comments)<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/blogs/&#123;id&#125;/comments&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_create_comment</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>, request, *, content</span>):</span><br>    user = request.__user__<br>    <span class="hljs-keyword">if</span> user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">raise</span> APIPermissionError(<span class="hljs-string">&#x27;content&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> content <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> content.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;content&#x27;</span>)<br>    blog = <span class="hljs-keyword">await</span> Blog.find(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">if</span> blog <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">raise</span> APIResourceNotFoundError(<span class="hljs-string">&#x27;Blog&#x27;</span>)<br>    comment = Comment(blog_id=blog.<span class="hljs-built_in">id</span>, user_id=user.<span class="hljs-built_in">id</span>, user_name=user.name,<br>                      user_image=user.image, content=content.strip())<br>    <span class="hljs-keyword">await</span> comment.save()<br>    <span class="hljs-keyword">return</span> comment<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/comments/delete/&#123;id&#125;&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_delete_comments</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>, request</span>):</span><br>    logging.info(<span class="hljs-built_in">id</span>)<br>    check_admin(request)<br>    comment = <span class="hljs-keyword">await</span> Comment.find(<span class="hljs-built_in">id</span>)<br>    <span class="hljs-keyword">if</span> comment <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">raise</span> APIResourceNotFoundError(<span class="hljs-string">&#x27;comment&#x27;</span>)<br>    <span class="hljs-keyword">await</span> comment.remove()<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">id</span>=<span class="hljs-built_in">id</span>)<br></code></pre></td></tr></table></figure><p>manage_comments.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;评论&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initVM</span>(<span class="hljs-params">data</span>) </span>&#123;</span><br><span class="javascript">    $(<span class="hljs-string">&#x27;#vm&#x27;</span>).show();</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">comments</span>: data.comments,</span><br><span class="javascript">            <span class="hljs-attr">page</span>: data.page</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">delete_comment</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">comment</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> content = comment.content.length &gt; <span class="hljs-number">20</span> ? comment.content.substring(<span class="hljs-number">0</span>, <span class="hljs-number">20</span>) + <span class="hljs-string">&#x27;...&#x27;</span> : comment.content;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (confirm(<span class="hljs-string">&#x27;确认要删除评论\n“&#x27;</span> + content + <span class="hljs-string">&#x27;”？\n删除后不可恢复！&#x27;</span>)) &#123;</span><br><span class="javascript">                    postJSON(<span class="hljs-string">&#x27;/api/comments/delete/&#x27;</span> + comment.id , <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, r</span>) </span>&#123;</span><br><span class="javascript">                        <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                            <span class="hljs-keyword">return</span> error(err);</span><br><span class="javascript">                        &#125;</span><br><span class="javascript">                        refresh();</span><br><span class="javascript">                        <span class="hljs-comment">/*会重新reload这个页面*/</span></span><br><span class="javascript">                    &#125;);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    getJSON(<span class="hljs-string">&#x27;/api/comments&#x27;</span>, &#123;</span><br><span class="javascript">        <span class="hljs-attr">page</span>: &#123;&#123; page_index &#125;&#125;</span><br><span class="javascript">    &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, results</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> fatal(err);</span><br><span class="javascript">        &#125;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#loading&#x27;</span>).hide();</span><br><span class="javascript">        initVM(results);</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-margin-bottom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-breadcrumb&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-active&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>评论<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/blogs&quot;</span>&gt;</span>日志<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/manage/users&quot;</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loading&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-text-center&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-spinner uk-icon-medium uk-icon-spin&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 正在加载...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-table uk-table-hover&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-10&quot;</span>&gt;</span>作者<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-5-10&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-10&quot;</span>&gt;</span>创建时间<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-10&quot;</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">v-repeat</span>=<span class="hljs-string">&quot;comment: comments&quot;</span> &gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;comment.user_name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;comment.content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;comment.created_at.toDateTime()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#0&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;click: delete_comment(comment)&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-trash-o&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-component</span>=<span class="hljs-string">&quot;pagination&quot;</span> <span class="hljs-attr">v-with</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><p><strong>代码解析：</strong></p><p><a href="https://github.com/Ah-yuan/MyWebAPP">Ah-yuan/MyWebAPP: python项目实战解析 (github.com)</a></p><p><strong>参考链接：</strong></p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python教程</a></p><p><a href="https://github.com/cuizichenghome/MyWebAPP">Python教程项目实战代码注释</a></p><p><a href="https://blog.csdn.net/josephpai/category_7049397.html">Python实战</a></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python实战(廖雪峰)</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python实战-廖雪峰-代码解析（三）</title>
    <link href="/2021/08/13/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2021/08/13/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="7、构建前端"><a href="#7、构建前端" class="headerlink" title="7、构建前端"></a>7、构建前端</h1><blockquote><p>HTML是骨架；javascript是肌肉；CSS是衣服。</p><p>为解决HTML代码复用，可以将复用代码提取为模板；有两种思路：</p><p>1）通过include把页面拆成多部份引用</p><p>2）“<strong>继承</strong>”模板的方式，是通过编写一个“<strong>父模板</strong>”，在父模板中定义一些可替换的block（<strong>块</strong>）。然后，编写多个“子模板”，每个子模板都可以只替换父模板定义的block。</p></blockquote><p>父模板<strong>base</strong>.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">&#123;% macro pagination(url, page) %&#125;</span><br><span class="hljs-comment">    &lt;ul class=&quot;uk-pagination&quot;&gt;</span><br><span class="hljs-comment">        &#123;% if page.has_previous %&#125;</span><br><span class="hljs-comment">            &lt;li&gt;&lt;a href=&quot;&#123;&#123; url &#125;&#125;&#123;&#123; page.page_index - 1 &#125;&#125;&quot;&gt;&lt;i class=&quot;uk-icon-angle-double-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="hljs-comment">        &#123;% else %&#125;</span><br><span class="hljs-comment">            &lt;li class=&quot;uk-disabled&quot;&gt;&lt;span&gt;&lt;i class=&quot;uk-icon-angle-double-left&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="hljs-comment">        &#123;% endif %&#125;</span><br><span class="hljs-comment">            &lt;li class=&quot;uk-active&quot;&gt;&lt;span&gt;&#123;&#123; page.page_index &#125;&#125;&lt;/span&gt;&lt;/li&gt;</span><br><span class="hljs-comment">        &#123;% if page.has_next %&#125;</span><br><span class="hljs-comment">            &lt;li&gt;&lt;a href=&quot;&#123;&#123; url &#125;&#125;&#123;&#123; page.page_index + 1 &#125;&#125;&quot;&gt;&lt;i class=&quot;uk-icon-angle-double-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="hljs-comment">        &#123;% else %&#125;</span><br><span class="hljs-comment">            &lt;li class=&quot;uk-disabled&quot;&gt;&lt;span&gt;&lt;i class=&quot;uk-icon-angle-double-right&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="hljs-comment">        &#123;% endif %&#125;</span><br><span class="hljs-comment">    &lt;/ul&gt;</span><br><span class="hljs-comment">&#123;% endmacro %&#125;</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    &#123;% block meta %&#125;<span class="hljs-comment">&lt;!-- block meta  --&gt;</span>&#123;% endblock %&#125; <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>&#123;% block title %&#125; ? &#123;% endblock %&#125; - Awesome<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>#网页显示名称<br>  ....<br>    &#123;% block beforehead %&#125;<span class="hljs-comment">&lt;!-- before head  --&gt;</span>&#123;% endblock %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-navbar uk-navbar-attached uk-margin-bottom&quot;</span>&gt;</span>#最上层条目<br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-container uk-container-center&quot;</span>&gt;</span> #容器<br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-navbar-brand&quot;</span>&gt;</span>Awesome<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-navbar-nav&quot;</span>&gt;</span> #模块盒子<br>                ....  #省略<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-navbar-flip&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-navbar-nav&quot;</span>&gt;</span><br>                &#123;% if __user__ %&#125; #用户名盒子，这里有个变量 __user__<br>                    ...#省略<br>                &#123;% else %&#125;<br>                    ...#省略<br>                &#123;% endif %&#125;<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-container uk-container-center&quot;</span>&gt;</span> #显示博客条目<br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-grid&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- content --&gt;</span><br>            &#123;% block content %&#125;   #博客内容<br>            &#123;% endblock %&#125;<br>            <span class="hljs-comment">&lt;!-- // content --&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-margin-large-top&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:#eee; border-top:1px solid #ccc;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-container uk-container-center uk-text-center&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-margin-top uk-margin-bottom&quot;</span>&gt;</span>#最下层网站分析，注释等<br>                <br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>从***<em>base</em>***.html继承一个blogs.html</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">extends</span></span> &#x27;__base__.html&#x27; %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">block</span></span> title %&#125;</span><span class="xml">日志</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endblock</span></span> %&#125;</span><span class="xml"> #网页显示名称</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">block</span></span> content %&#125;</span><span class="xml">#博客内容</span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-medium-3-4&quot;</span>&gt;</span>   #左3/4的部分</span><br><span class="xml">        </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">for</span></span> blog <span class="hljs-keyword">in</span> blogs %&#125;</span><span class="xml"></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/blog/</span></span></span><span class="hljs-template-variable">&#123;&#123; blog.id &#125;&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; blog.name &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-meta&quot;</span>&gt;</span>发表于</span><span class="hljs-template-variable">&#123;&#123; blog.created_at &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; blog.summary &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/blog/</span></span></span><span class="hljs-template-variable">&#123;&#123; blog.id &#125;&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>继续阅读 <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-angle-double-right&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-divider&quot;</span>&gt;</span></span><br><span class="xml">        </span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endfor</span></span> %&#125;</span><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-medium-1-4&quot;</span>&gt;</span>    #右1/4的部分</span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-header&quot;</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel-title&quot;</span>&gt;</span>友情链接<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-list uk-list-line&quot;</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-thumbs-o-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>编程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-thumbs-o-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>读书<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-thumbs-o-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Python教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-thumbs-o-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Git教程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endblock</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><p>修改handlers</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-string">&#x27; url handlers &#x27;</span><br><br><span class="hljs-keyword">import</span> re, time, json, logging, hashlib, base64, asyncio<br><br><span class="hljs-keyword">from</span> coroweb <span class="hljs-keyword">import</span> get, post<br><br><span class="hljs-keyword">from</span> models <span class="hljs-keyword">import</span> User, Comment, Blog, next_id<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">request</span>):</span><br>    summary = <span class="hljs-string">&#x27;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&#x27;</span><br>    blogs = [<br>        Blog(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;1&#x27;</span>, name=<span class="hljs-string">&#x27;Test Blog&#x27;</span>, summary=summary, created_at=time.time()-<span class="hljs-number">120</span>),<br>        Blog(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;2&#x27;</span>, name=<span class="hljs-string">&#x27;Something New&#x27;</span>, summary=summary, created_at=time.time()-<span class="hljs-number">3600</span>),<br>        Blog(<span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;3&#x27;</span>, name=<span class="hljs-string">&#x27;Learn Swift&#x27;</span>, summary=summary, created_at=time.time()-<span class="hljs-number">7200</span>)<br>    ]<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;blogs.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;blogs&#x27;</span>: blogs<br>    &#125;<br></code></pre></td></tr></table></figure><p>Blog的创建日期显示的是一个浮点数，因为它是由这段模板渲染出来的（blogs.html）：</p><blockquote><p>显示内容：发表于1628642411.4468637</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-meta&quot;</span>&gt;</span>发表于&#123;&#123; blog.created_at &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>解决方法是通过jinja2的filter（过滤器），把一个浮点数转换成日期字符串：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-article-meta&quot;</span>&gt;</span>发表于&#123;&#123; blog.created_at|datetime &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>app.py增添内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">datetime_filter</span>(<span class="hljs-params">t</span>):</span><br>    delta = <span class="hljs-built_in">int</span>(time.time() - t)<br>    <span class="hljs-keyword">if</span> delta &lt; <span class="hljs-number">60</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">u&#x27;1分钟前&#x27;</span><br>    <span class="hljs-keyword">if</span> delta &lt; <span class="hljs-number">3600</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">u&#x27;%s分钟前&#x27;</span> % (delta//<span class="hljs-number">60</span>)<br>    <span class="hljs-keyword">if</span> delta &lt; <span class="hljs-number">86400</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">u&#x27;%s小时前&#x27;</span> % (delta//<span class="hljs-number">3600</span>)<br>    <span class="hljs-keyword">if</span> delta &lt; <span class="hljs-number">604800</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">u&#x27;%s天前&#x27;</span> % (delta//<span class="hljs-number">86400</span>)<br>    dt = datetime.fromtimestamp(t)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">u&#x27;%s年%s月%s日&#x27;</span> % (dt.year, dt.month, dt.day)<br></code></pre></td></tr></table></figure><p>app.py中增添async def init(loop) jinja2模板中datetime过滤器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">init__jinja2(app, filters=<span class="hljs-built_in">dict</span>(datetime=datetime_filter))<br></code></pre></td></tr></table></figure><h1 id="8、编写API"><a href="#8、编写API" class="headerlink" title="8、编写API"></a>8、编写API</h1><blockquote><p>API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</p></blockquote><p>应用API的任务一方面是通信，另一方面是对获取的信息解析。主流格式是XML和JSON，其中JSON近年来最为流行。由于JSON能直接被JavaScript读取，所以，以JSON格式编写的REST风格的API具有简单、易读、易用的特点。如果一个URL返回的不是HTML，而是机器能直接解析的数据，这个URL就可以看成是一个Web API。</p><p><strong>编写API有什么好处呢？</strong>由于API就是把Web App的功能全部封装了，所以，通过API操作数据，可以极大地把前端和后端的代码隔离，使得后端代码易于测试，前端代码编写更简单。</p><blockquote><p>先定义APIError，当API调用时发生逻辑错误，分类处理</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">JSON API definition</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> inspect<br><span class="hljs-keyword">import</span> functools<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Json API definition</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment">#在apis.py中定义一个Page类用于存储分页信息</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Page</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Page object for display pages.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, item_count, page_index=<span class="hljs-number">1</span>, page_size=<span class="hljs-number">10</span></span>):</span><br>        <span class="hljs-comment"># item_count 文章的总数</span><br>        <span class="hljs-comment"># page_size 每页显示的文章数量</span><br>        <span class="hljs-comment"># page_count 需要多少页将文章显示出来</span><br>        self.item_count = item_count<br>        self.page_size = page_size<br>        self.page_count = item_count // page_size + (<span class="hljs-number">1</span> <span class="hljs-keyword">if</span> item_count % page_size &gt; <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">if</span> (item_count == <span class="hljs-number">0</span>) <span class="hljs-keyword">or</span> (page_index &gt; self.page_count):<br>            self.offset = <span class="hljs-number">0</span><br>            self.limit = <span class="hljs-number">0</span><br>            self.page_index = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># page_index 待查看那一页</span><br>            self.page_index = page_index<br>            self.offset = self.page_size * (page_index - <span class="hljs-number">1</span>)<br>            self.limit = self.page_size  <span class="hljs-comment"># 这里有待改进</span><br>        self.has_next = self.page_index &lt; self.page_count<br>        self.has_previous = self.page_index &gt; <span class="hljs-number">1</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__str__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;item_count: %s, page_count: %s, page_index: %s, page_size: %s, offset:%s, limit:%s&#x27;</span> \<br>                % (self.item_count, self.page_count, self.page_index, self.page_size, self.offset, self.limit)<br><br>    __repr__ = __str__<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">APIError</span>(<span class="hljs-params">Exception</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    the base APIError which contains error(required), data(optional) and message(optional).</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, error, data=<span class="hljs-string">&#x27;&#x27;</span>, message=<span class="hljs-string">&#x27;&#x27;</span></span>):</span><br>        <span class="hljs-built_in">super</span>(APIError, self).__init__(message)<br>        self.error = error<br>        self.data = data<br>        self.message = message<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">APIValueError</span>(<span class="hljs-params">APIError</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Indicate the input value has error or invalid.The data specifies the error field of input form.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, field, message=<span class="hljs-string">&#x27;&#x27;</span></span>):</span><br>        <span class="hljs-built_in">super</span>(APIValueError, self).__init__(<span class="hljs-string">&#x27;value:invalid&#x27;</span>, field, message)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">APIResourceNotFoundError</span>(<span class="hljs-params">APIValueError</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Indicate the resource was not found. The data specifies the resource name.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, field, message=<span class="hljs-string">&#x27;&#x27;</span></span>):</span><br>        <span class="hljs-built_in">super</span>(APIResourceNotFoundError, self).__init__(<span class="hljs-string">&#x27;value:invalid&#x27;</span>, field, message)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">APIPermissionError</span>(<span class="hljs-params">APIError</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Indicate the api has no permission.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, message</span>):</span><br>        <span class="hljs-built_in">super</span>(APIPermissionError, self).__init__(<span class="hljs-string">&#x27;permission:forbidden&#x27;</span>, <span class="hljs-string">&#x27;permission&#x27;</span>, message)<br></code></pre></td></tr></table></figure><p>一个API也是一个URL的处理函数，我们希望能直接通过一个@api来把函数变成JSON格式的REST API。例如，获取注册用户可以用一个API实现如下：</p><p>handlers.py新增内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-string">&#x27; url handlers &#x27;</span><br><br><span class="hljs-keyword">import</span> re, time, json, logging, hashlib, base64, asyncio<br><br><span class="hljs-keyword">from</span> coroweb <span class="hljs-keyword">import</span> get, post<br><br><span class="hljs-keyword">from</span> models <span class="hljs-keyword">import</span> User, Comment, Blog, next_id<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_page_index</span>(<span class="hljs-params">page_str</span>):</span><span class="hljs-comment">#获取当前所在页码</span><br>    p = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">try</span>:<br>        p = <span class="hljs-built_in">int</span>(page_str)<br>    <span class="hljs-keyword">except</span> ValueError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">if</span> p &lt; <span class="hljs-number">1</span>:<br>        p = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-comment">#获取注册用户</span><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/api/users&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_get_users</span>(<span class="hljs-params">*, page=<span class="hljs-string">&#x27;1&#x27;</span></span>):</span><br>    page_index = get_page_index(page)<br>    <span class="hljs-comment"># count为MySQL中的聚集函数，用于计算某列的行数</span><br>    <span class="hljs-comment"># user_count代表了有多个用户id</span><br>    user_count = <span class="hljs-keyword">await</span> User.findNumber(<span class="hljs-string">&#x27;count(id)&#x27;</span>)<br>    p = Page(user_count, page_index)<br>    <span class="hljs-comment"># 通过Page类来计算当前页的相关信息, 其实是数据库limit语句中的offset，limit</span><br>    <span class="hljs-keyword">if</span> user_count == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, users=())<br>    <span class="hljs-comment"># page.offset表示从那一行开始检索，page.limit表示检索多少行</span><br>    users = <span class="hljs-keyword">await</span> User.findAll(orderBy=<span class="hljs-string">&#x27;created_at desc&#x27;</span>, limit=(p.offset, p.limit))<br><br>    <span class="hljs-keyword">for</span> u <span class="hljs-keyword">in</span> users:<br>        u.passwd = <span class="hljs-string">&#x27;*******&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(page=p, users=users)<br></code></pre></td></tr></table></figure><p>只要返回一个dict，通过app.py中response_factory这个middleware就可以把结果序列化为JSON并返回。</p><h1 id="9、用户管理"><a href="#9、用户管理" class="headerlink" title="9、用户管理"></a>9、用户管理</h1><p>用户管理涉及到用户注册和登录。</p><h2 id="9-1-用户注册"><a href="#9-1-用户注册" class="headerlink" title="9.1 用户注册"></a>9.1 用户注册</h2><p>API与MVC的区别：</p><blockquote><p>mvc主要用于建站，web api主要用于构建http服务，API更抽象，更不注重View的生成。</p></blockquote><p>编写的API必须有以下几点功能：</p><blockquote><p>验证注册信息<br>对用户密码进行加密，这里使用SHA1单向算法，并储存到数据库<br>发送对应的cookie到浏览器</p></blockquote><p>在handlers.py中编写注册部分代码，修改handlers</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-string">&#x27; url handlers &#x27;</span><br><br><span class="hljs-keyword">import</span> re, time, json, hashlib<br><span class="hljs-keyword">from</span> aiohttp <span class="hljs-keyword">import</span> web<br><span class="hljs-keyword">from</span> apis <span class="hljs-keyword">import</span> Page, APIValueError, APIError<br><span class="hljs-keyword">from</span> config <span class="hljs-keyword">import</span> configs<br><span class="hljs-keyword">from</span> coroweb <span class="hljs-keyword">import</span> get, post<br><span class="hljs-keyword">from</span> models <span class="hljs-keyword">import</span> User, Blog, next_id<br><br>_RE_EMAIL = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^[0-9a-z\.\_\-]+\@[a-z0-9\-\_]+(\.[a-z0-9\-\_]+)&#123;1,4&#125;$&#x27;</span>)<br>_RE_SHA1 = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^[0-9a-f]&#123;40&#125;$&#x27;</span>)<br>COOKIE_NAME = <span class="hljs-string">&#x27;myblogsession&#x27;</span> <span class="hljs-comment">#用来在set_cookie中命名</span><br>_COOKIE_KEY = configs.session.secret <span class="hljs-comment">#导入默认设置</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">user2cookie</span>(<span class="hljs-params">user, max_age</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Generate cookie str by user(id-expires-sha1).</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># build cookie string by: id-expires-sha1</span><br>    <span class="hljs-comment"># 过期时间是创建时间+存活时间</span><br>    expires = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() + max_age))<br>    s = <span class="hljs-string">&#x27;%s-%s-%s-%s&#x27;</span> % (user.<span class="hljs-built_in">id</span>, user.passwd, expires, _COOKIE_KEY)<br>    <span class="hljs-comment"># SHA1是一种单向算法，可以通过原始字符串计算出SHA1结果，但无法通过SHA1结果反推出原始字符串。</span><br>    L = [user.<span class="hljs-built_in">id</span>, expires, hashlib.sha1(s.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest()]<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;-&#x27;</span>.join(L)<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/register&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">register</span>():</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&quot;__template__&quot;</span>: <span class="hljs-string">&#x27;register.html&#x27;</span><br>    &#125;<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/users&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">api_register_user</span>(<span class="hljs-params">*, email, name, passwd</span>):</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> name.strip():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;name&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> email <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> _RE_EMAIL.match(email):<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;email&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> passwd <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> _RE_SHA1.match(passwd):<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;passwd&#x27;</span>)<br><br>    <span class="hljs-comment"># 该邮箱是否已注册</span><br>    users = <span class="hljs-keyword">await</span> User.findAll(<span class="hljs-string">&#x27;email=?&#x27;</span>, [email])<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(users) &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">raise</span> APIError(<span class="hljs-string">&#x27;register:failed&#x27;</span>, <span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-string">&#x27;Email is already in use.&#x27;</span>)<br><br>    uid = next_id()<br>    <span class="hljs-comment"># 数据库中存储的passwd是经过SHA1计算后的40位Hash字符串，所以服务器端并不知道用户的原始口令。</span><br>    sha1_passwd = <span class="hljs-string">&#x27;%s:%s&#x27;</span> % (uid, passwd)<br>    user = User(<span class="hljs-built_in">id</span>=uid, name=name.strip(), email=email, passwd=hashlib.sha1(sha1_passwd.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest(),<br>                image=<span class="hljs-string">&#x27;http://www.gravatar.com/avatar/%s?d=mm&amp;s=120&#x27;</span> % hashlib.md5(email.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest())<br>    <span class="hljs-keyword">await</span> user.save()<br><br>    <span class="hljs-comment"># make session cookie:</span><br>    <span class="hljs-comment"># 制作cookie返回浏览器客户端</span><br>    r = web.Response()<br>    r.set_cookie(COOKIE_NAME, user2cookie(user, <span class="hljs-number">86400</span>), max_age=<span class="hljs-number">86400</span>, httponly=<span class="hljs-literal">True</span>)<br>    user.passwd = <span class="hljs-string">&#x27;********&#x27;</span><br>    r.content_type = <span class="hljs-string">&#x27;application/json&#x27;</span><br>    r.body = json.dumps(user, ensure_ascii=<span class="hljs-literal">False</span>).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-keyword">return</span> r<br></code></pre></td></tr></table></figure><p>注册页面register.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% extends &#x27;__base__.html&#x27; %&#125;<br><br>&#123;% block title %&#125;注册&#123;% endblock %&#125;<br><br>&#123;% block beforehead %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">validateEmail</span>(<span class="hljs-params">email</span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^[a-z0-9\.\-\_]+\@[a-z0-9\-\_]+(\.[a-z0-9\-\_]+)&#123;1,4&#125;$/</span>;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> re.test(email.toLowerCase());</span><br><span class="javascript">&#125;</span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">password1</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">password2</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">submit</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</span><br><span class="javascript">                event.preventDefault();</span><br><span class="javascript">                <span class="hljs-keyword">var</span> $form = $(<span class="hljs-string">&#x27;#vm&#x27;</span>);</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (! <span class="hljs-built_in">this</span>.name.trim()) &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> $form.showFormError(<span class="hljs-string">&#x27;请输入名字&#x27;</span>);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (! validateEmail(<span class="hljs-built_in">this</span>.email.trim().toLowerCase())) &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> $form.showFormError(<span class="hljs-string">&#x27;请输入正确的Email地址&#x27;</span>);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.password1.length &lt; <span class="hljs-number">6</span>) &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> $form.showFormError(<span class="hljs-string">&#x27;口令长度至少为6个字符&#x27;</span>);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.password1 !== <span class="hljs-built_in">this</span>.password2) &#123;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> $form.showFormError(<span class="hljs-string">&#x27;两次输入的口令不一致&#x27;</span>);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">                <span class="hljs-keyword">var</span> email = <span class="hljs-built_in">this</span>.email.trim().toLowerCase();</span><br><span class="javascript">                $form.postJSON(<span class="hljs-string">&#x27;/api/users&#x27;</span>, &#123;</span><br><span class="javascript">                    <span class="hljs-attr">name</span>: <span class="hljs-built_in">this</span>.name.trim(),</span><br><span class="javascript">                    <span class="hljs-attr">email</span>: email,</span><br><span class="javascript">                    <span class="hljs-attr">passwd</span>: CryptoJS.SHA1(email + <span class="hljs-string">&#x27;:&#x27;</span> + <span class="hljs-built_in">this</span>.password1).toString()</span><br><span class="javascript">                &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, r</span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (err) &#123;</span><br><span class="javascript">                        <span class="hljs-keyword">return</span> $form.showFormError(err);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                    <span class="hljs-keyword">return</span> location.assign(<span class="hljs-string">&#x27;/&#x27;</span>);</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">    $(<span class="hljs-string">&#x27;#vm&#x27;</span>).show();</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&#123;% endblock %&#125;<br><br>&#123;% block content %&#125;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-2-3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>欢迎注册！<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;submit: submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form uk-form-stacked&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-alert uk-alert-danger uk-hidden&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>名字:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;名字&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>电子邮件:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;your-name@example.com&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>输入口令:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password1&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;输入口令&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-label&quot;</span>&gt;</span>重复口令:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-controls&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password2&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;重复口令&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-button uk-button-primary&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-user&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 注册<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>&#123;% endblock %&#125;<br></code></pre></td></tr></table></figure><h2 id="9-2-用户登录"><a href="#9-2-用户登录" class="headerlink" title="9.2 用户登录"></a>9.2 用户登录</h2><p>用户登录比用户注册复杂。由于HTTP协议是一种无状态协议，而服务器要跟踪用户状态，就只能通过cookie实现。大多数Web框架提供了Session功能来封装保存用户状态的cookie。Session的优点是简单易用，可以直接从Session中取出用户登录信息。采用直接读取cookie的方式来验证用户登录，每次用户访问任意URL，都会对cookie进行验证，这种方式的好处是<strong>保证服务器处理任意的URL都是无状态的，可以扩展到多台服务器</strong>。</p><p>由于登录成功后是由服务器生成一个cookie发送给浏览器，所以，要保证这个cookie不会被客户端伪造出来。</p><p>实现防伪造cookie的关键是通过一个单向算法（例如SHA1）</p><p>在编写登录界面是，我们发现当一个正确的密码输入，会经历以下步骤：</p><p>首先会由网页中的JavaScript取得对应的值，并按照如下组合方式，进行摘要算法计算出一个字符串(A)：</p><p><code>&quot;email&quot; + &quot;:&quot; + &quot;passwd&quot;</code><br>然后字符串(A)被以密码的形式传递到API内，在API内，字符串(A)再一次按照如下组合方式，进行摘要算法计算出一个字符串(B)，并保存到服务器数据库上。</p><p><code>&quot;用户id&quot; + &quot;:&quot; + 字串符(A)</code><br>到了最后制作cookie发送给浏览器时，又使用字符串(B)按照如下组合方式，进行摘要算法计算出一个字符串(C)：</p><p><code>&quot;用户id&quot; + 字串符(B) + &quot;到期时间&quot; + &quot;密匙&quot;</code><br>最后再按照如下组合方式，生成一个字串符(D)发送给浏览器</p><p><code>用户id&quot; + &quot;到期时间&quot; + 字符串(C)</code><br>所以浏览器实际收到的信息有：用户id、过期时间、SHA1值(字串符(C))</p><p>在cookie未到过期的期间，当服务器验证cookie是否伪造时，其实只需根据用户信息在数据库查找相应的用户口令(即字符串(B))，再使用其进行摘要算法与cookie中的字符串(C)比较是否等价，就可以知道是否伪造了。算法的关键在于SHA1是一种单向算法，即可以通过原始字符串计算出SHA1结果，但无法通过SHA1结果反推出原始字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-string">&#x27; url handlers &#x27;</span><br><br><span class="hljs-keyword">import</span> re, time, json, hashlib<br><span class="hljs-keyword">from</span> aiohttp <span class="hljs-keyword">import</span> web<br><span class="hljs-keyword">from</span> apis <span class="hljs-keyword">import</span> Page, APIValueError, APIError<br><span class="hljs-keyword">from</span> config <span class="hljs-keyword">import</span> configs<br><span class="hljs-keyword">from</span> coroweb <span class="hljs-keyword">import</span> get, post<br><span class="hljs-keyword">from</span> models <span class="hljs-keyword">import</span> User, Blog, next_id<br><br><span class="hljs-comment">#登录</span><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/signin&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">signin</span>():</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&quot;__template__&quot;</span>: <span class="hljs-string">&#x27;signin.html&#x27;</span><br>    &#125;<br><br><span class="hljs-meta">@post(<span class="hljs-params"><span class="hljs-string">&#x27;/api/authenticate&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">authenticate</span>(<span class="hljs-params">*, email, passwd</span>):</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> email:<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-string">&#x27;Invalid email.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> passwd:<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;passwd&#x27;</span>, <span class="hljs-string">&#x27;Invalid password.&#x27;</span>)<br>    users = <span class="hljs-keyword">await</span> User.findAll(<span class="hljs-string">&#x27;email=?&#x27;</span>, [email])<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(users) == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-string">&#x27;Email not exist.&#x27;</span>)<br>    user = users[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-comment"># 在Python 3.x版本中，把&#x27;xxx&#x27;和u&#x27;xxx&#x27;统一成Unicode编码，即写不写前缀u都是一样的，</span><br>    <span class="hljs-comment"># 而以字节形式表示的字符串则必须加上b前缀：b&#x27;xxx&#x27;。</span><br>    <span class="hljs-comment"># sha1 = hashlib.sha1()</span><br>    <span class="hljs-comment"># sha1.update(user.id.encode(&#x27;utf-8&#x27;))</span><br>    <span class="hljs-comment"># sha1.update(b&#x27;:&#x27;)</span><br>    <span class="hljs-comment"># sha1.update(passwd.encode(&#x27;utf-8&#x27;))</span><br><br>    <span class="hljs-comment"># 检查密码,把登录密码转化格式并进行摘要算法</span><br>    browser_sha1_passwd = <span class="hljs-string">&#x27;%s:%s&#x27;</span> % (user.<span class="hljs-built_in">id</span>, passwd)<br>    browser_sha1 = hashlib.sha1(browser_sha1_passwd.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    <span class="hljs-keyword">if</span> user.passwd != browser_sha1.hexdigest():<br>        <span class="hljs-keyword">raise</span> APIValueError(<span class="hljs-string">&#x27;passwd&#x27;</span>, <span class="hljs-string">&#x27;Invalid password&#x27;</span>)<br><br>    <span class="hljs-comment"># authenticate ok, set cookie</span><br>    <span class="hljs-comment">#制作cookie发送给浏览器，这步骤与注册用户一样</span><br>    r = web.Response()<br>    r.set_cookie(COOKIE_NAME, user2cookie(user, <span class="hljs-number">86400</span>), max_age=<span class="hljs-number">86400</span>, httponly=<span class="hljs-literal">True</span>)<br>    user.passwd = <span class="hljs-string">&quot;********&quot;</span><br>    r.content_type = <span class="hljs-string">&#x27;application/json&#x27;</span><br>    r.body = json.dumps(user, ensure_ascii=<span class="hljs-literal">False</span>).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-keyword">return</span> r<br></code></pre></td></tr></table></figure><p>对于每个URL处理函数，如果我们都去写解析cookie的代码，那会导致代码重复很多次。</p><p>解决方法：利用middle在处理URL之前，把cookie解析出来，并将登录用户绑定到request对象上，这样，后续的URL处理函数就可以直接拿到登录用户：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#handlers.py</span><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">cookie2user</span>(<span class="hljs-params">cookie_str</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Parse cookie and load user if cookie is valid.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> cookie_str:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        L = cookie_str.split(<span class="hljs-string">&#x27;-&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(L) != <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        uid, expires, sha1 = L<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(expires) &lt; time.time():<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        user = <span class="hljs-keyword">await</span> User.find(uid)<br>        <span class="hljs-keyword">if</span> user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        s = <span class="hljs-string">&#x27;%s-%s-%s-%s&#x27;</span> % (uid, user.passwd, expires, _COOKIE_KEY)<br>        <span class="hljs-keyword">if</span> sha1 != hashlib.sha1(s.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest():<br>            logging.info(<span class="hljs-string">&#x27;invalid sha1&#x27;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        user.passwd = <span class="hljs-string">&#x27;********&#x27;</span><br>        <span class="hljs-keyword">return</span> user<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logging.exception(e)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">cookie2user</span>(<span class="hljs-params">cookie_str</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Parse cookie and load user if cookie is valid.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> cookie_str:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        L = cookie_str.split(<span class="hljs-string">&#x27;-&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(L) != <span class="hljs-number">3</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        uid, expires, sha1 = L<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(expires) &lt; time.time():<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        user = <span class="hljs-keyword">await</span> User.find(uid)<br>        <span class="hljs-keyword">if</span> user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        s = <span class="hljs-string">&#x27;%s-%s-%s-%s&#x27;</span> % (uid, user.passwd, expires, _COOKIE_KEY)<br>        <span class="hljs-keyword">if</span> sha1 != hashlib.sha1(s.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest():<br>            logging.info(<span class="hljs-string">&#x27;invalid sha1&#x27;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        user.passwd = <span class="hljs-string">&#x27;********&#x27;</span><br>        <span class="hljs-keyword">return</span> user<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logging.exception(e)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><p>编写middleware，提取并解析cookie并绑定在request对象上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#apps.py中新增</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">auth_factory</span>(<span class="hljs-params">app, handler</span>):</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">auth</span>(<span class="hljs-params">request</span>):</span><br>        logging.info(<span class="hljs-string">&#x27;check user:%s %s&#x27;</span> % (request.method, request.path))<br>        request.__user__ = <span class="hljs-literal">None</span><br>        <span class="hljs-comment"># cookies是用分号分割的一组名值对，在python中被看成dict</span><br>        cookie_str = request.cookies.get(COOKIE_NAME)<br>        <span class="hljs-keyword">if</span> cookie_str:<br>            user = <span class="hljs-keyword">await</span> cookie2user(cookie_str)<br>            <span class="hljs-built_in">print</span>(user)<br>            <span class="hljs-keyword">if</span> user:<br>                logging.info(<span class="hljs-string">&#x27;set current user:%s&#x27;</span> % user.email)<br>                request.__user__ = user<br>        <span class="hljs-keyword">if</span> request.path.startswith(<span class="hljs-string">&#x27;/manage/&#x27;</span>) <span class="hljs-keyword">and</span> (request.__user__ <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> request.__user__.admin):<br>            <span class="hljs-keyword">return</span> web.HTTPFound(<span class="hljs-string">&#x27;/signin&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> handler(request)<br>    <span class="hljs-keyword">return</span> auth<br></code></pre></td></tr></table></figure><p>signin.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-height-1-1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>欢迎登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/static/css/uikit.min.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/static/css/uikit.gradient.min.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/js/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/js/sha1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/js/uikit.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/js/vue.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/js/awesome.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">$(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">var</span> vmAuth = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vm&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">passwd</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">submit</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;</span><br><span class="javascript">                event.preventDefault();</span><br><span class="javascript">                <span class="hljs-keyword">var</span></span><br><span class="javascript">                    $form = $(<span class="hljs-string">&#x27;#vm&#x27;</span>),</span><br><span class="javascript">                    email = <span class="hljs-built_in">this</span>.email.trim().toLowerCase(),</span><br><span class="javascript">                    data = &#123;</span><br><span class="javascript">                        <span class="hljs-attr">email</span>: email,</span><br><span class="javascript">                        <span class="hljs-attr">passwd</span>: <span class="hljs-built_in">this</span>.passwd===<span class="hljs-string">&#x27;&#x27;</span> ? <span class="hljs-string">&#x27;&#x27;</span> : CryptoJS.SHA1(email + <span class="hljs-string">&#x27;:&#x27;</span> + <span class="hljs-built_in">this</span>.passwd).toString()</span><br><span class="javascript">                    &#125;;</span><br><span class="javascript">                $form.postJSON(<span class="hljs-string">&#x27;/api/authenticate&#x27;</span>, data, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, result</span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">if</span> (! err) &#123;</span><br><span class="javascript">                        location.assign(<span class="hljs-string">&#x27;/&#x27;</span>);</span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript">&#125;);</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-height-1-1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-vertical-align uk-text-center uk-height-1-1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-vertical-align-middle&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 320px&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-button&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-html5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span>欢迎登录<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vm&quot;</span> <span class="hljs-attr">v-on</span>=<span class="hljs-string">&quot;submit: submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-panel uk-panel-box uk-form&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-alert uk-alert-danger uk-hidden&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-icon uk-width-1-1&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-envelope-o&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;电子邮件&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-form-large&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-icon uk-width-1-1&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-lock&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;passwd&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;passwd&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;口令&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-form-large&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-form-row&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-width-1-1 uk-button uk-button-primary uk-button-large&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;uk-icon-sign-in&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> 登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>登录后发现不能显示用户，将app.py中以下内容取消注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">r[<span class="hljs-string">&#x27;__user__&#x27;</span>] = request.__user__<br></code></pre></td></tr></table></figure><p><strong>代码解析：</strong></p><p><a href="https://github.com/Ah-yuan/MyWebAPP">Ah-yuan/MyWebAPP: python项目实战解析 (github.com)</a></p><p><strong>参考链接：</strong></p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python教程</a></p><p><a href="https://github.com/cuizichenghome/MyWebAPP">Python教程项目实战代码注释</a></p><p><a href="https://blog.csdn.net/josephpai/category_7049397.html">Python实战</a></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python实战(廖雪峰)</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python实战-廖雪峰-代码解析（二）</title>
    <link href="/2021/08/11/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2021/08/11/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="4、编写Web框架"><a href="#4、编写Web框架" class="headerlink" title="4、编写Web框架"></a>4、编写Web框架</h1><p>参考链接：</p><h2 id="4-1web框架"><a href="#4-1web框架" class="headerlink" title="4.1web框架"></a>4.1web框架</h2><p><strong>web程序工作流程</strong>：</p><blockquote><p>用户访问网址（URL）——–浏览器便生成对应的HTTP请求——–Web服务器接收请求——–通过WSGI将HTTP格式的请求数据转换成我们的Flask程序能够使用的Python数据——–Flask根据请求的URL执行<strong>对应的视图函数</strong>，获取返回值生成响应。——–响应依次经过WSGI转换生成HTTP响应——–请求的客户端接收——–浏览器渲染响应中包含的HTML和CSS代码，并执行Java Script代码，最终把解析后的页面呈现在用户浏览器的窗口中。</p></blockquote><blockquote><p><strong>路由匹配</strong>：建立不同的URL和<strong>视图函数</strong>的映射关系。根据<strong>GET,POST等HTTP方法</strong>类型决定返回给客户端的具体页面。</p></blockquote><p>Http定义了与服务器交互的不同方法，最基本的方法有4种，分别是GET，POST，PUT，DELETE。<br>URL全称是资源描述符，我们可以这样认为：一个URL地址，它用于描述一个网络上的资源，而HTTP中的GET，POST，PUT，DELETE就对应着对这个资源的查，改，增，删4个操作。</p><p>需要实现的功能</p><blockquote><p>针对GET、POST，将path和<strong>URL规则</strong>建立关系;</p><p>定义RequestHandler从从web.request对象中获取必要的参数</p><p>添加静态文件</p><p>实现注册一个URL处理函数，实现批量注册</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> inspect<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br><span class="hljs-keyword">from</span> aiohttp <span class="hljs-keyword">import</span> web<br><span class="hljs-keyword">from</span> apis <span class="hljs-keyword">import</span> APIError<br><br><br><span class="hljs-comment"># 为了向装饰器传递参数，必须使用另外一个函数（在这里为get）来创建装饰器</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">path</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Define decorator @get(&#x27;/path&#x27;)</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decorator</span>(<span class="hljs-params">func</span>):</span><br><span class="hljs-meta">        @functools.wraps(<span class="hljs-params">func</span>)</span><br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span>(<span class="hljs-params">*args, **kw</span>):</span><br>            <span class="hljs-keyword">return</span> func(*args, **kw)<br>        wrapper.__method__ = <span class="hljs-string">&#x27;GET&#x27;</span><br>        wrapper.__route__ = path<br>        <span class="hljs-keyword">return</span> wrapper<br>    <span class="hljs-keyword">return</span> decorator<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">post</span>(<span class="hljs-params">path</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Define decorator @post(&#x27;/path&#x27;)</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decorator</span>(<span class="hljs-params">func</span>):</span><br><span class="hljs-meta">        @functools.wraps(<span class="hljs-params">func</span>)</span><br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span>(<span class="hljs-params">*args, **kw</span>):</span><br>            <span class="hljs-keyword">return</span> func(*args, **kw)<br>        wrapper.__method__ = <span class="hljs-string">&#x27;POST&#x27;</span><br>        wrapper.__route__ = path<br>        <span class="hljs-keyword">return</span> wrapper<br>    <span class="hljs-keyword">return</span> decorator<br><br><br><span class="hljs-comment"># --- 使用inspect模块中的signature方法来获取函数的参数，实现一些复用功能--</span><br><span class="hljs-comment"># inspect.Parameter 的类型有5种：</span><br><span class="hljs-comment"># POSITIONAL_ONLY只能是位置参数</span><br><span class="hljs-comment"># KEYWORD_ONLY关键字参数且提供了key</span><br><span class="hljs-comment"># VAR_POSITIONAL相当于是 *args</span><br><span class="hljs-comment"># VAR_KEYWORD相当于是 **kw</span><br><span class="hljs-comment"># POSITIONAL_OR_KEYWORD可以是位置参数也可以是关键字参数</span><br><br><span class="hljs-comment">#收集没有默认值的命名关键字参数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_required_kw_args</span>(<span class="hljs-params">fn</span>):</span><br>    args = []<br>    params = inspect.signature(fn).parameters<br>    <span class="hljs-comment"># 如果url处理函数需要传入关键字参数，且默认是空的话，获取这个key</span><br>    <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> params.items():<br>        <span class="hljs-keyword">if</span> param.kind == inspect.Parameter.KEYWORD_ONLY <span class="hljs-keyword">and</span> param.default == inspect.Parameter.empty:<br>            args.append(name)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">tuple</span>(args)<br><br><span class="hljs-comment">#获取命名关键字参数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_named_kw_args</span>(<span class="hljs-params">fn</span>):</span><br>    args = []<br>    params = inspect.signature(fn).parameters<br>    <span class="hljs-comment"># 如果url处理函数需要传入关键字参数，获取这个key</span><br>    <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> params.items():<br>        <span class="hljs-keyword">if</span> param.kind == inspect.Parameter.KEYWORD_ONLY:<br>            args.append(name)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">tuple</span>(args)<br><br><span class="hljs-comment">#判断有没有命名关键字参数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_named_kw_args</span>(<span class="hljs-params">fn</span>):</span><br>    params = inspect.signature(fn).parameters<br>    <span class="hljs-comment"># 判断是否有关键字参数</span><br>    <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> params.items():<br>        <span class="hljs-keyword">if</span> param.kind == inspect.Parameter.KEYWORD_ONLY:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-comment">#判断有没有关键字参数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_var_kw_arg</span>(<span class="hljs-params">fn</span>):</span><br>    params = inspect.signature(fn).parameters<br>    <span class="hljs-comment"># 判断是否有关键字变长参数，VAR_KEYWORD对应**kw</span><br>    <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> params.items():<br>        <span class="hljs-keyword">if</span> param.kind == inspect.Parameter.VAR_KEYWORD:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-comment">#判断是否含有名叫&#x27;request&#x27;参数，且该参数是否为最后一个参数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_request_arg</span>(<span class="hljs-params">fn</span>):</span><br>    sig = inspect.signature(fn)<br>    params = sig.parameters<br>    found = <span class="hljs-literal">False</span><br>    <span class="hljs-comment"># 判断是否存在一个参数叫做request，并且该参数要在其他普通的位置参数之后</span><br>    <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> params.items():<br>        <span class="hljs-keyword">if</span> name == <span class="hljs-string">&#x27;request&#x27;</span>:<br>            found = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> found <span class="hljs-keyword">and</span> (param.kind != inspect.Parameter.VAR_POSITIONAL <span class="hljs-keyword">and</span> param.kind != inspect.Parameter.KEYWORD_ONLY<br>                      <span class="hljs-keyword">and</span> param.kind != inspect.Parameter.VAR_KEYWORD):<br>            <span class="hljs-comment"># 如果判断为True，则表明param只能是位置参数POSITIONAL_ONLY</span><br>            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&#x27;request parameter must be the last named parameter in function: %s%s&#x27;</span><br>                             % (fn.__name__, <span class="hljs-built_in">str</span>(sig)))<br>    <span class="hljs-keyword">return</span> found<br><br><br><span class="hljs-comment"># RequestHandler目的就是从URL处理函数（如handlers.index）中分析其需要接收的参数，从web.request对象中获取必要的参数，</span><br><span class="hljs-comment"># 调用URL处理函数，然后把结果转换为web.Response对象，这样，就完全符合aiohttp框架的要求</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestHandler</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br><span class="hljs-comment">#接受app参数</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, app, fn</span>):</span><br>        self._app = app<br>        self._func = fn<br>        self._has_request_arg = has_request_arg(fn)<br>        self._has_var_kw_arg = has_var_kw_arg(fn)<br>        self._has_named_kw_args = has_named_kw_args(fn)<br>        self._named_kw_args = get_named_kw_args(fn)<br>        self._required_kw_args = get_required_kw_args(fn)<br><br>    <span class="hljs-comment"># 1.定义kw对象，用于保存参数</span><br>    <span class="hljs-comment"># 2.判断URL处理函数是否存在参数，如果存在则根据是POST还是GET方法将request请求内容保存到kw</span><br>    <span class="hljs-comment"># 3.如果kw为空(说明request没有请求内容)，则将match_info列表里面的资源映射表赋值给kw；如果不为空则把命名关键字参数的内容给kw</span><br>    <span class="hljs-comment"># 4.完善_has_request_arg和_required_kw_args属性</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__call__</span>(<span class="hljs-params">self, request</span>):</span><br>        kw = <span class="hljs-literal">None</span><br>        <span class="hljs-comment"># 如果有需要处理的参数</span><br>        <span class="hljs-keyword">if</span> self._has_var_kw_arg <span class="hljs-keyword">or</span> self._has_named_kw_args <span class="hljs-keyword">or</span> self._required_kw_args:<br>            <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> request.content_type:<br>                    <span class="hljs-keyword">return</span> web.HTTPBadRequest(<span class="hljs-string">&#x27;Missing Content-Type.&#x27;</span>)<br>                ct = request.content_type.lower()<br>                <span class="hljs-keyword">if</span> ct.startswith(<span class="hljs-string">&#x27;application/json&#x27;</span>):<br>                    params = <span class="hljs-keyword">await</span> request.json()<br>                    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">isinstance</span>(params, <span class="hljs-built_in">dict</span>):<br>                        <span class="hljs-keyword">return</span> web.HTTPBadRequest(<span class="hljs-string">&#x27;JSON body must be object.&#x27;</span>)<br>                    kw = params<br>                <span class="hljs-keyword">elif</span> ct.startswith(<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>) <span class="hljs-keyword">or</span> ct.startswith(<span class="hljs-string">&#x27;multipart/form-data&#x27;</span>):<br>                    params = <span class="hljs-keyword">await</span> request.post()<br>                    kw = <span class="hljs-built_in">dict</span>(**params)<br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-keyword">return</span> web.HTTPBadRequest(<span class="hljs-string">&#x27;Unsupported Content-Type: %s&#x27;</span> % request.content_type)<br>            <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>                qs = request.query_string<br>                <span class="hljs-keyword">if</span> qs:<br>                    kw = <span class="hljs-built_in">dict</span>()<br>                    <span class="hljs-comment"># 解析url中?后面的键值对内容保存到request_content</span><br>                    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">                    qs = &#x27;first=f,s&amp;second=s&#x27;</span><br><span class="hljs-string">                    parse.parse_qs(qs, True).items()</span><br><span class="hljs-string">                    &gt;&gt;&gt; dict([(&#x27;first&#x27;, [&#x27;f,s&#x27;]), (&#x27;second&#x27;, [&#x27;s&#x27;])])</span><br><span class="hljs-string">                    &#x27;&#x27;&#x27;</span><br>                    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> parse.parse_qs(qs, <span class="hljs-literal">True</span>).items():<br>                        kw[k] = v[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">if</span> kw <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-comment"># 参数为空说明没有从request对象中获取到参数,或者URL处理函数没有参数</span><br>            <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">            def hello(request):</span><br><span class="hljs-string">                    text = &#x27;&lt;h1&gt;hello, %s!&lt;/h1&gt;&#x27; % request.match_info[&#x27;name&#x27;]</span><br><span class="hljs-string">                    return web.Response()</span><br><span class="hljs-string">            app.router.add_route(&#x27;GET&#x27;, &#x27;/hello/&#123;name&#125;&#x27;, hello)</span><br><span class="hljs-string">            &#x27;&#x27;&#x27;</span><br>            <span class="hljs-string">&#x27;&#x27;&#x27;if not self._has_var_kw_arg and not self._has_kw_arg and not self._required_kw_args:</span><br><span class="hljs-string">                # 当URL处理函数没有参数时，将request.match_info设为空，防止调用出错</span><br><span class="hljs-string">                request_content = dict()</span><br><span class="hljs-string">            &#x27;&#x27;&#x27;</span><br>            kw = <span class="hljs-built_in">dict</span>(**request.match_info)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> self._has_var_kw_arg <span class="hljs-keyword">and</span> self._named_kw_args:<br>                <span class="hljs-comment"># remove all unamed kw， 从request_content中删除URL处理函数中所有不需要的参数</span><br>                copy = <span class="hljs-built_in">dict</span>()<br>                <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> self._named_kw_args:<br>                    <span class="hljs-keyword">if</span> name <span class="hljs-keyword">in</span> kw:<br>                        copy[name] = kw[name]<br>                kw = copy<br>            <span class="hljs-comment"># check named arg: 检查关键字参数的名字是否和match_info中的重复</span><br>            <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> request.match_info.items():<br>                <span class="hljs-keyword">if</span> k <span class="hljs-keyword">in</span> kw:<br>                    logging.warning(<span class="hljs-string">&#x27;Duplicate arg name in named arg and kw args: %s&#x27;</span> % k)<br>                kw[k] = v<br>        <span class="hljs-keyword">if</span> self._has_request_arg:<br>            kw[<span class="hljs-string">&#x27;request&#x27;</span>] = request<br>        <span class="hljs-comment"># check required kw: 检查是否有必须关键字参数</span><br>        <span class="hljs-keyword">if</span> self._required_kw_args:<br>            <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> self._required_kw_args:<br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">in</span> kw:<br>                    <span class="hljs-keyword">return</span> web.HTTPBadRequest(<span class="hljs-string">&#x27;Missing argument: %s&#x27;</span> % name)<br>        <span class="hljs-comment"># 以上代码均是为了获取调用参数</span><br>        logging.info(<span class="hljs-string">&#x27;call with args: %s&#x27;</span> % <span class="hljs-built_in">str</span>(kw))<br>        <span class="hljs-keyword">try</span>:<br>            r = <span class="hljs-keyword">await</span> self._func(**kw)<br>            <span class="hljs-keyword">return</span> r<br>        <span class="hljs-keyword">except</span> APIError <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">dict</span>(error=e.error, data=e.data, message=e.message)<br><br><br><span class="hljs-comment"># 添加CSS等静态文件所在路径</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_static</span>(<span class="hljs-params">app</span>):</span><br>    path = os.path.join(os.path.dirname(os.path.abspath(__file__)), <span class="hljs-string">&#x27;static&#x27;</span>)<br>    app.router.add_static(<span class="hljs-string">&#x27;/static/&#x27;</span>, path)<br>    logging.info(<span class="hljs-string">&#x27;add static %s =&gt; %s&#x27;</span> % (<span class="hljs-string">&#x27;/static/&#x27;</span>, path))<br><br><span class="hljs-comment">#用来注册一个URL处理函数，主要用来验证函数是否有包含URL的响应方法与路径信息，以及将函数变为协程。</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_route</span>(<span class="hljs-params">app, fn</span>):</span><br>    method = <span class="hljs-built_in">getattr</span>(fn, <span class="hljs-string">&#x27;__method__&#x27;</span>, <span class="hljs-literal">None</span>)<br>    path = <span class="hljs-built_in">getattr</span>(fn, <span class="hljs-string">&#x27;__route__&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">if</span> path <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> method <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&#x27;@get or @post not defined in %s.&#x27;</span> % <span class="hljs-built_in">str</span>(fn))<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> asyncio.iscoroutinefunction(fn) <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> inspect.isgeneratorfunction(fn):<br>        fn = asyncio.coroutine(fn)<br>    logging.info(<span class="hljs-string">&#x27;add route %s %s =&gt; %s(%s)&#x27;</span> % (method, path, fn.__name__,<br>                                                <span class="hljs-string">&#x27;, &#x27;</span>.join(inspect.signature(fn).parameters.keys())))<br>    <span class="hljs-comment"># 正式注册为对应的url处理函数</span><br>    <span class="hljs-comment"># RequestHandler类的实例是一个可以call的函数</span><br>    <span class="hljs-comment"># 自省函数 &#x27;__call__&#x27;</span><br>    app.router.add_route(method, path, RequestHandler(app, fn))<br><br><span class="hljs-comment">#可以批量注册的函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_routes</span>(<span class="hljs-params">app, module_name</span>):</span><br>    n = module_name.rfind(<span class="hljs-string">&#x27;.&#x27;</span>)<br>    <span class="hljs-keyword">if</span> n == (-<span class="hljs-number">1</span>):<br>        <span class="hljs-comment"># __import__ 作用同import语句，但__import__是一个函数，并且只接收字符串作为参数,</span><br>        <span class="hljs-comment"># 其实import语句就是调用这个函数进行导入工作的, 其返回值是对应导入模块的引用</span><br>        <span class="hljs-comment"># __import__(&#x27;os&#x27;,globals(),locals(),[&#x27;path&#x27;,&#x27;pip&#x27;]) ,等价于from os import path, pip</span><br>        mod = <span class="hljs-built_in">__import__</span>(module_name, <span class="hljs-built_in">globals</span>(), <span class="hljs-built_in">locals</span>())<br>    <span class="hljs-keyword">else</span>:<br>        name = module_name[n+<span class="hljs-number">1</span>:]<br>        mod = <span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">__import__</span>(module_name[:n], <span class="hljs-built_in">globals</span>(), <span class="hljs-built_in">locals</span>(), [name]), name)<br>    <span class="hljs-keyword">for</span> attr <span class="hljs-keyword">in</span> <span class="hljs-built_in">dir</span>(mod):<br>        <span class="hljs-keyword">if</span> attr.startswith(<span class="hljs-string">&#x27;_&#x27;</span>):<br>            <span class="hljs-keyword">continue</span><br>        fn = <span class="hljs-built_in">getattr</span>(mod, attr)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">callable</span>(fn):<br>            method = <span class="hljs-built_in">getattr</span>(fn, <span class="hljs-string">&#x27;__method__&#x27;</span>, <span class="hljs-literal">None</span>)<br>            path = <span class="hljs-built_in">getattr</span>(fn, <span class="hljs-string">&#x27;__route__&#x27;</span>, <span class="hljs-literal">None</span>)<br>            <span class="hljs-keyword">if</span> method <span class="hljs-keyword">and</span> path:<br>                add_route(app, fn)<br></code></pre></td></tr></table></figure><p>之后，要在主程序app.py的初始化函数init()中添加middleware、jinja2模板和自注册的支持</p><h2 id="4-2应用初始化"><a href="#4-2应用初始化" class="headerlink" title="4.2应用初始化"></a>4.2应用初始化</h2><blockquote><p>middleware是一种<strong>拦截器</strong>，一个URL在被某个函数处理前，可以经过一系列的middleware的处理。</p><p>请求对象request的处理工序流水线先后依次是：<br>     logger_factory-&gt;response_factory-&gt;RequestHandler().<strong>call</strong>-&gt;get或post-&gt;handler<br>对应的响应对象response的处理工序流水线先后依次是:<br>由handler构造出要返回的具体对象，然后在这个返回的对象上加上’<strong>method</strong>‘和’<strong>route</strong>‘属性，以标识别这个对象并使接下来的程序容易处理<br>RequestHandler目的就是从请求对象request的请求content中获取必要的参数，调用URL处理函数,然后把结果返回给response_factory<br>response_factory在拿到经过处理后的对象，经过一系列类型判断，构造出正确web.Response对象，以正确的方式返回给客户端</p></blockquote><p>实现功能</p><blockquote><p>初始化jinja模板、输出request请求方法及路径、将URL处理函数返回值转化为<code>web.response</code>对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 修改app.py</span><br><span class="hljs-keyword">import</span> logging;<br><br><span class="hljs-keyword">import</span> orm<br><span class="hljs-keyword">from</span> config <span class="hljs-keyword">import</span> configs<br><br>logging.basicConfig(level=logging.INFO)<br><span class="hljs-keyword">from</span> coroweb <span class="hljs-keyword">import</span> add_routes, add_static<br><span class="hljs-keyword">from</span> aiohttp <span class="hljs-keyword">import</span> web<br><span class="hljs-comment"># FileSystemLoader是文件系统加载器，用来加载模板路径</span><br><span class="hljs-keyword">from</span> jinja2 <span class="hljs-keyword">import</span> Environment, FileSystemLoader<br><span class="hljs-keyword">import</span> asyncio, os, json, time<br><span class="hljs-keyword">from</span> aiohttp <span class="hljs-keyword">import</span> web<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init_jinja2</span>(<span class="hljs-params">app, **kw</span>):</span><br>    logging.info(<span class="hljs-string">&#x27;init jinja2...&#x27;</span>)<br>    options = <span class="hljs-built_in">dict</span>(<br>        <span class="hljs-comment"># 自动转义xml/html的特殊字符</span><br>        autoescape=kw.get(<span class="hljs-string">&#x27;autoescape&#x27;</span>, <span class="hljs-literal">True</span>),<br>        <span class="hljs-comment"># 代码块的开始结束标志</span><br>        block_start_string=kw.get(<span class="hljs-string">&#x27;block_start_string&#x27;</span>, <span class="hljs-string">&#x27;&#123;%&#x27;</span>),<br>        block_end_string=kw.get(<span class="hljs-string">&#x27;block_end_string&#x27;</span>, <span class="hljs-string">&#x27;%&#125;&#x27;</span>),<br>        <span class="hljs-comment"># 变量的开始结束标志</span><br>        variable_start_string=kw.get(<span class="hljs-string">&#x27;variable_start_string&#x27;</span>, <span class="hljs-string">&#x27;&#123;&#123;&#x27;</span>),<br>        variable_end_string=kw.get(<span class="hljs-string">&#x27;variable_end_string&#x27;</span>, <span class="hljs-string">&#x27;&#125;&#125;&#x27;</span>),<br>        <span class="hljs-comment"># 当模板文件被修改后，下次请求加载该模板文件的时候会自动重新加载修改后的模板文件</span><br>        auto_reload=kw.get(<span class="hljs-string">&#x27;auto_reload&#x27;</span>, <span class="hljs-literal">True</span>)<br>    )<br>    <span class="hljs-comment"># 获取模板文件的位置</span><br>    path = kw.get(<span class="hljs-string">&#x27;path&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">if</span> path <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        path = os.path.join(os.path.dirname(os.path.abspath(__file__)), <span class="hljs-string">&#x27;templates&#x27;</span>)<br>    logging.info(<span class="hljs-string">&#x27;set jinja2 template path : %s&#x27;</span> % path)<br>    <span class="hljs-comment"># Environment是jinjia2中的一个核心类，它的实例用来保存配置、全局对象以及模板文件的路径</span><br>    env = Environment(loader=FileSystemLoader(path), **options)<br>    <span class="hljs-comment"># filters: 一个字典描述的filters过滤器集合, 如果非模板被加载的时候, 可以安全的添加或较早的移除.</span><br>    filters = kw.get(<span class="hljs-string">&#x27;filters&#x27;</span>, <span class="hljs-literal">None</span>)<br>    <span class="hljs-keyword">if</span> filters <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">for</span> name, f <span class="hljs-keyword">in</span> filters.items():<br>            env.filters[name] = f<br>    <span class="hljs-comment"># 所有的一切是为了给app添加__templating__字段</span><br>    <span class="hljs-comment"># 前面将jinja2的环境配置都赋值给env了，这里再把env存入app的dict中，这样app就知道要到哪儿去找模板，怎么解析模板。</span><br>    app[<span class="hljs-string">&#x27;__templating__&#x27;</span>] = env<br><br><br><span class="hljs-comment"># 这个函数的作用就是当有http请求的时候，通过logging.info输出请求的信息，其中包括请求的方法和路径</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logger_factory</span>(<span class="hljs-params">app, handler</span>):</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logger</span>(<span class="hljs-params">request</span>):</span><br>        logging.info(<span class="hljs-string">&#x27;Request: %s %s&#x27;</span> % (request.method, request.path))<br>        <span class="hljs-comment"># handler为处理函数，request为参数</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> handler(request)<br><br>    <span class="hljs-keyword">return</span> logger<br><br><br><span class="hljs-comment"># 函数返回值转化为`web.response`对象</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">response_factory</span>(<span class="hljs-params">app, handler</span>):</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">response</span>(<span class="hljs-params">request</span>):</span><br>        logging.info(<span class="hljs-string">&#x27;Response handler...&#x27;</span>)<br>        r = <span class="hljs-keyword">await</span> handler(request)<br>        logging.info(<span class="hljs-string">&#x27;response result = %s&#x27;</span> % <span class="hljs-built_in">str</span>(r))<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(r, web.StreamResponse):<br>            <span class="hljs-keyword">return</span> r<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(r, <span class="hljs-built_in">bytes</span>):<br>            resp = web.Response(body=r)<br>            resp.content_type = <span class="hljs-string">&#x27;application/octet-stream&#x27;</span><br>            <span class="hljs-keyword">return</span> resp<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(r, <span class="hljs-built_in">str</span>):<br>            <span class="hljs-keyword">if</span> r.startswith(<span class="hljs-string">&#x27;redirect:&#x27;</span>):<br>                <span class="hljs-keyword">return</span> web.HTTPFound(r[<span class="hljs-number">9</span>:])<br>            resp = web.Response(body=r.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>            resp.content_type = <span class="hljs-string">&#x27;text/html;charset=utf-8&#x27;</span><br>            <span class="hljs-keyword">return</span> resp<br>        <span class="hljs-comment"># 大多数返回的是dict</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(r, <span class="hljs-built_in">dict</span>):<br>            template = r.get(<span class="hljs-string">&#x27;__template__&#x27;</span>)<br>            <span class="hljs-keyword">if</span> template <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                resp = web.Response(body=json.dumps(r, ensure_ascii=<span class="hljs-literal">False</span>,<br>                                                    default=<span class="hljs-keyword">lambda</span> o: o.__dict__).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>                resp.content_type = <span class="hljs-string">&#x27;application/json;charset=utf-8&#x27;</span><br>                <span class="hljs-keyword">return</span> resp<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-comment"># 对模板进行渲染</span><br>                <span class="hljs-comment">#r[&#x27;__user__&#x27;] = request.__user__</span><br>                resp = web.Response(body=app[<span class="hljs-string">&#x27;__templating__&#x27;</span>].get_template(template).render(**r).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>                resp.content_type = <span class="hljs-string">&#x27;text/html;charset=utf-8&#x27;</span><br>                <span class="hljs-keyword">return</span> resp<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(r, <span class="hljs-built_in">int</span>) <span class="hljs-keyword">and</span> <span class="hljs-number">600</span> &gt; r &gt;= <span class="hljs-number">100</span>:<br>            <span class="hljs-keyword">return</span> web.Response(r)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(r, <span class="hljs-built_in">tuple</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(r) == <span class="hljs-number">2</span>:<br>            status_code, description = r<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(status_code, <span class="hljs-built_in">int</span>) <span class="hljs-keyword">and</span> <span class="hljs-number">600</span> &gt; status_code &gt;= <span class="hljs-number">100</span>:<br>                <span class="hljs-keyword">return</span> web.Response(status=status_code, text=<span class="hljs-built_in">str</span>(description))<br>        <span class="hljs-comment"># default:</span><br>        resp = web.Response(body=<span class="hljs-built_in">str</span>(r).encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        resp.content_type = <span class="hljs-string">&#x27;text/plain;charset=utf-8&#x27;</span><br>        <span class="hljs-keyword">return</span> resp<br><br>    <span class="hljs-keyword">return</span> response<br><br><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init</span>(<span class="hljs-params">loop</span>):</span><br>    <span class="hljs-keyword">await</span> orm.create_pool(loop=loop, **configs.db)<br>    app = web.Application(loop=loop, middlewares=[<br>        logger_factory, response_factory<br>    ])<br>    init_jinja2(app)<br>    add_routes(app, <span class="hljs-string">&#x27;handlers&#x27;</span>)<br>    add_static(app)<br>    srv = <span class="hljs-keyword">await</span> loop.create_server(app.make_handler(), <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, <span class="hljs-number">9000</span>)  <span class="hljs-comment"># 监听IP + port</span><br>    logging.info(<span class="hljs-string">&#x27;server started at http://127.0.0.1:9000...&#x27;</span>)<br>    <span class="hljs-keyword">return</span> srv<br><br><br><span class="hljs-comment"># 获取eventloop</span><br>loop = asyncio.get_event_loop()<br><span class="hljs-comment"># 然后加入运行事件</span><br>loop.run_until_complete(init(loop))<br>loop.run_forever()<br></code></pre></td></tr></table></figure><h1 id="5、编写配置文件"><a href="#5、编写配置文件" class="headerlink" title="5、编写配置文件"></a>5、编写配置文件</h1><p>参考链接：</p><blockquote><p>通常，一个Web App在运行时都需要读取配置文件，比如<strong>数据库</strong>的用户名、口令等，在不同的<strong>环境</strong>中运行时，Web App可以通过读取不同的配置文件来获得正确的配置。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Default configurations.</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>configs = &#123;<br>    <span class="hljs-string">&#x27;debug&#x27;</span>: <span class="hljs-literal">True</span>,<br>    <span class="hljs-string">&#x27;db&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;host&#x27;</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>        <span class="hljs-string">&quot;port&quot;</span>: <span class="hljs-number">3306</span>,<br>        <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;www-data&quot;</span>,<br>        <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;www-data&quot;</span>,<br>        <span class="hljs-string">&quot;db&quot;</span>: <span class="hljs-string">&#x27;myblog&#x27;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;session&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;secret&quot;</span>: <span class="hljs-string">&#x27;MyBlog&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>config_override.py，用来覆盖某些默认设置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Override configurations.</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>configs = &#123;<br>    <span class="hljs-string">&#x27;db&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;host&#x27;</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>应用程序读取配置文件需要优先从config_override.py读取。为了简化读取配置文件，可以把所有配置读取到统一的config.py中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Configuration</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> config_default<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dict</span>(<span class="hljs-params"><span class="hljs-built_in">dict</span></span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    simple but support access as x.y style.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, names=(<span class="hljs-params"></span>), values=(<span class="hljs-params"></span>), **kw</span>):</span><br>        <span class="hljs-built_in">super</span>(<span class="hljs-type">Dict</span>, self).__init__(**kw)<br>        <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(names, values):<br>            self[k] = v<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__getattr__</span>(<span class="hljs-params">self, key</span>):</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> self[key]<br>        <span class="hljs-keyword">except</span> KeyError:<br>            <span class="hljs-keyword">raise</span> AttributeError(<span class="hljs-string">r&quot;&#x27;Dict&#x27; object has no attribute like &#x27;%s&#x27;&quot;</span> % key)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__setattr__</span>(<span class="hljs-params">self, key, value</span>):</span><br>        self[key] = value<br><br><br><span class="hljs-comment">#将default和override中的配置合并，最终以override为准</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">merge</span>(<span class="hljs-params">defaults, override</span>):</span><span class="hljs-comment">#收集参数</span><br>    r = &#123;&#125;<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> defaults.items():<br>        <span class="hljs-keyword">if</span> k <span class="hljs-keyword">in</span> override:<span class="hljs-comment"># 如果覆盖文件有此参数</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(v, <span class="hljs-built_in">dict</span>):<span class="hljs-comment"># 判断是否其value为dict</span><br>                r[k] = merge(v, override[k]) <span class="hljs-comment"># 是的话，则创建新的字典后，调用原函数（递归）</span><br>            <span class="hljs-keyword">else</span>:<br>                r[k] = override[k] <span class="hljs-comment"># 否则把覆盖配置文件的值导入</span><br>        <span class="hljs-keyword">else</span>:<br>            r[k] = v <span class="hljs-comment"># 如果覆盖文件没有，就继续使用默认值</span><br>    <span class="hljs-keyword">return</span> r<br><br><span class="hljs-comment"># 增加x.y的取值功能</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">toDict</span>(<span class="hljs-params">d</span>):</span><br>    D = <span class="hljs-type">Dict</span>()<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> d.items():<br>        D[k] = toDict(v) <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(v, <span class="hljs-built_in">dict</span>) <span class="hljs-keyword">else</span> v<br>    <span class="hljs-keyword">return</span> D<br><br>configs = config_default.configs<br><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">import</span> config_override<br>    configs = merge(configs, config_override.configs)<br><span class="hljs-keyword">except</span> ImportError:<br>    <span class="hljs-keyword">pass</span><br><br>configs = toDict(configs)<br><br></code></pre></td></tr></table></figure><h1 id="6、编写MVC"><a href="#6、编写MVC" class="headerlink" title="6、编写MVC"></a>6、编写MVC</h1><p>参考链接：</p><blockquote><p>MVC：Model-View-Controller,中文名“模型-视图-控制器”。<br>Controller主要负责业务逻辑，如检查用户名是否存在，取出用户信息等；PythonURL处理函数就是控制器<br>View主要负责显示逻辑，通过一些简单的替换变量，View生成最终看到的HTML，实质是HTML模板<br>Model主要负责传参给View，在View替换变量的时候，就可以从Model中取出相应的数据。</p></blockquote><p>测试运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-string">&#x27; url handlers &#x27;</span><br><br><span class="hljs-keyword">import</span> re, time, json, logging, hashlib, base64, asyncio<br><br><span class="hljs-keyword">from</span> coroweb <span class="hljs-keyword">import</span> get, post<br><br><span class="hljs-keyword">from</span> models <span class="hljs-keyword">import</span> User, Comment, Blog, next_id<br><br><span class="hljs-meta">@get(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">request</span>):</span><br>    users = <span class="hljs-keyword">await</span> User.findAll()<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-string">&#x27;__template__&#x27;</span>: <span class="hljs-string">&#x27;test.html&#x27;</span>,<br>        <span class="hljs-string">&#x27;users&#x27;</span>: users<br>    &#125;<br></code></pre></td></tr></table></figure><p>test.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Test users - Awesome Python Webapp<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>All users<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    &#123;% for u in users %&#125;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; u.name &#125;&#125; / &#123;&#123; u.email &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    &#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：将jinja2初始化中以下代码注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#r[&#x27;__user__&#x27;] = request.__user__</span><br></code></pre></td></tr></table></figure><p>运行app.py后，通过localhost:9000/可以正常访问</p><p><strong>代码解析：</strong></p><p><a href="https://github.com/Ah-yuan/MyWebAPP">Ah-yuan/MyWebAPP: python项目实战解析 (github.com)</a></p><p><strong>参考链接：</strong></p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python教程</a></p><p><a href="https://github.com/cuizichenghome/MyWebAPP">Python教程项目实战代码注释</a></p><p><a href="https://blog.csdn.net/josephpai/category_7049397.html">Python实战</a></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python实战(廖雪峰)</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python实战-廖雪峰-代码解析（一）</title>
    <link href="/2021/08/10/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2021/08/10/python%E5%AE%9E%E6%88%98-%E5%BB%96%E9%9B%AA%E5%B3%B0-%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="1、搭建Web-App的骨架"><a href="#1、搭建Web-App的骨架" class="headerlink" title="1、搭建Web App的骨架"></a>1、搭建Web App的骨架</h1><blockquote><p>采用异步IO模式，利用aiohttp提供的框架创建了一个简单的服务器，监听9000端口的HTTP请求，这是最基本的操作，后续工作都将在这个服务器上进行。</p></blockquote><p>须实现的功能</p><blockquote><p>一直监听端口、基本的网页显示</p></blockquote><p>编写app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> logging; logging.basicConfig(level=logging.INFO)<br><br><span class="hljs-keyword">import</span> asyncio, os, json, time<br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><br><span class="hljs-keyword">from</span> aiohttp <span class="hljs-keyword">import</span> web<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">request</span>):</span><span class="hljs-comment">#可以看到这里返回的是html的源码，后续会将html源码放到文件夹中，使用链接方式引用</span><br>    <span class="hljs-keyword">return</span> web.Response(body=<span class="hljs-string">b&#x27;&lt;h1&gt;Awesome&lt;/h1&gt;&#x27;</span>)<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init</span>(<span class="hljs-params">loop</span>):</span><br>    app = web.Application(loop=loop)<br>    app.router.add_route(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>, index) <span class="hljs-comment">#对于首页的 / 请求进行相应，响应方法为上面的index</span><br>    srv = <span class="hljs-keyword">await</span> loop.create_server(app.make_handler(), <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, <span class="hljs-number">9000</span>)<span class="hljs-comment">#监听IP + port</span><br>    logging.info(<span class="hljs-string">&#x27;server started at http://127.0.0.1:9000...&#x27;</span>)<br>    <span class="hljs-keyword">return</span> srv<br><br><span class="hljs-comment"># 获取eventloop</span><br>loop = asyncio.get_event_loop()<br><span class="hljs-comment"># 然后加入运行事件</span><br>loop.run_until_complete(init(loop))<br>loop.run_forever()<br></code></pre></td></tr></table></figure><h1 id="2、编写ORM操作数据库"><a href="#2、编写ORM操作数据库" class="headerlink" title="2、编写ORM操作数据库"></a>2、编写ORM操作数据库</h1><p>参考链接</p><p><strong>ORM的概念：</strong></p><blockquote><p>对象关系映射（Object Relational Mapping），用于实现面向对象编程语言里不同类型系统的数据之间的转换 。从效果上说，它其实是创建了一个可在编程语言里使用的–“虚拟对象数据库”。映射这个词用在这里非常恰当，ORM就是我们在程序代码中所操作的对象和数据库中的数据之间的一种映射关系，有了这个映射关系，我们再操作对象就相当于操作数据库。这样的特点和Java中的DAO层（数据访问层）可以说非常的相似。</p></blockquote><p><strong>ORM的目的：</strong></p><blockquote><p>实现用面向对象的形式对数据库进行操作。把一张表映射为一个类，一行数据就是一个实例。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">面向对象简而言之：可以通过实例初始化、实例.属性或实例.方法（）的方式操作实例<br><span class="hljs-meta">#</span><span class="bash"> 创建实例:</span><br>user = User(id=123, name=&#x27;Michael&#x27;)<br><span class="hljs-meta">#</span><span class="bash"> 存入数据库:</span><br>user.insert()<br><span class="hljs-meta">#</span><span class="bash"> 查询所有User对象:</span><br>users = User.findAll()<br></code></pre></td></tr></table></figure><p><strong>数据库的操作流程：</strong></p><blockquote><p>创建数据库的连接、游标对象； 执行SQL语句； 处理异常;</p></blockquote><p>需要实现的功能：</p><blockquote><p>数据库操作：创建连接池、销毁连接池、select语句、除select外的语句、</p><p>数据表与定义的类关联起来：定义字段属性、定义元类（控制Model对象的创建）、定义基类；</p><p>基类中须实现：根据WHERE条件查找、返回整数的根据WHERE条件查找，适用于<code>select count(*)</code>类型的SQL、依据关键字查找、保存、更新、删除；</p><p>其他：log信息打印、sql语句中的占位符；</p></blockquote><p>编写orm.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio, logging<br><span class="hljs-keyword">import</span> aiomysql<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span>(<span class="hljs-params">sql, args=(<span class="hljs-params"></span>)</span>):</span>      <span class="hljs-comment">#将我们所需要了解的信息打印到log中，便于调试</span><br>    logging.info(<span class="hljs-string">&#x27;SQL: %s&#x27;</span> % sql)<br><br><span class="hljs-comment"># 创建连接池,每个http请求都从连接池连接到数据库</span><br><span class="hljs-comment"># 使用连接池的好处是不必频繁地打开和关闭数据库连接，而是能复用就尽量复用。</span><br><span class="hljs-comment"># 连接池由全局变量__pool存储，缺省情况下将编码设置为utf8，自动提交事务</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_pool</span>(<span class="hljs-params">loop, **kw</span>):</span><br>    logging.info(<span class="hljs-string">&#x27;create database connection pool...&#x27;</span>)<br>    <span class="hljs-keyword">global</span> __pool<br>    __pool = <span class="hljs-keyword">await</span> aiomysql.create_pool(<br>        host=kw.get(<span class="hljs-string">&#x27;host&#x27;</span>, <span class="hljs-string">&#x27;localhost&#x27;</span>),<br>        port=kw.get(<span class="hljs-string">&#x27;port&#x27;</span>, <span class="hljs-number">3306</span>),<br>        user=kw[<span class="hljs-string">&#x27;user&#x27;</span>],<br>        password=kw[<span class="hljs-string">&#x27;password&#x27;</span>],<br>        db=kw[<span class="hljs-string">&#x27;db&#x27;</span>],<br>        charset=kw.get(<span class="hljs-string">&#x27;charset&#x27;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>),<br>        autocommit=kw.get(<span class="hljs-string">&#x27;autocommit&#x27;</span>, <span class="hljs-literal">True</span>),<br>        maxsize=kw.get(<span class="hljs-string">&#x27;maxsize&#x27;</span>, <span class="hljs-number">10</span>),<br>        minsize=kw.get(<span class="hljs-string">&#x27;minsize&#x27;</span>, <span class="hljs-number">1</span>),<br>        loop=loop<br>    )<br><br><span class="hljs-comment"># 销毁连接池</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">destory_pool</span>():</span><br>    <span class="hljs-keyword">global</span> __pool<br>    <span class="hljs-keyword">if</span> __pool <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        __pool.close()<br>        <span class="hljs-keyword">await</span> __pool.wait_closed()<br><br><span class="hljs-comment"># select语句</span><br><span class="hljs-comment"># SQL语句的占位符是?，而MySQL的占位符是%s，select()函数在内部自动替换。注意要始终坚持使用带参数的SQL，而不是自己拼接SQL字符串，这样可以防止SQL注入攻击。</span><br><span class="hljs-comment"># 使用Cursor对象执行select语句时，通过featchall()可以拿到结果集。如果传入size，则拿到指定数量的结果集。结果集是一个list，每个元素都是一个tuple，对应一行记录。</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">select</span>(<span class="hljs-params">sql, args, size=<span class="hljs-literal">None</span></span>):</span><br>    log(sql, args)<br>    <span class="hljs-keyword">global</span> __pool<br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> __pool.get() <span class="hljs-keyword">as</span> conn:<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor(aiomysql.DictCursor) <span class="hljs-keyword">as</span> cur:<br>            <span class="hljs-keyword">await</span> cur.execute(sql.replace(<span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;%s&#x27;</span>), args <span class="hljs-keyword">or</span> ())<br>            <span class="hljs-keyword">if</span> size:<br>                rs = <span class="hljs-keyword">await</span> cur.fetchmany(size)<br>            <span class="hljs-keyword">else</span>:<br>                rs = <span class="hljs-keyword">await</span> cur.fetchall()<br>        logging.info(<span class="hljs-string">&#x27;rows returned: %s&#x27;</span> % <span class="hljs-built_in">len</span>(rs))<br>        <span class="hljs-keyword">return</span> rs<br><span class="hljs-comment"># insert,update,deleta语句</span><br><span class="hljs-comment"># 使用Cursor对象执行insert，update，delete语句时，执行结果由rowcount返回影响的行数，就可以拿到执行结果</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">execute</span>(<span class="hljs-params">sql, args, autocommit=<span class="hljs-literal">True</span></span>):</span><br>    log(sql)<br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> __pool.get() <span class="hljs-keyword">as</span> conn:<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> autocommit:<br>            <span class="hljs-keyword">await</span> conn.begin()<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor(aiomysql.DictCursor) <span class="hljs-keyword">as</span> cur:<br>                <span class="hljs-keyword">await</span> cur.execute(sql.replace(<span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;%s&#x27;</span>), args)<br>                affected = cur.rowcount<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> autocommit:<br>                <span class="hljs-keyword">await</span> conn.commit()<br>        <span class="hljs-keyword">except</span> BaseException <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> autocommit:<br>                <span class="hljs-keyword">await</span> conn.rollback()<br>            <span class="hljs-keyword">raise</span><br>        <span class="hljs-keyword">finally</span>:<br>            conn.close()<br>        <span class="hljs-keyword">return</span> affected<br><br><br><span class="hljs-comment"># 用于输出**元类**中创建sql_insert语句中的占位符</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_args_string</span>(<span class="hljs-params">num</span>):</span><br>    l = []<br>    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num):<br>        l.append(<span class="hljs-string">&#x27;?&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;, &#x27;</span>.join(l)<br><br><br><span class="hljs-comment"># 定义Field类，负责保存(数据库)表的字段名和字段类型</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Field</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name, colunm_type, primary_key, default</span>):</span><br>        self.name = name<br>        self.colunm_type = colunm_type<br>        self.primary_key = primary_key<br>        self.default = default<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__str__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;%s, %s, %s&gt;&#x27;</span> % (self.__class__.__name__, self.colunm_type, self.name)<br><br><span class="hljs-comment"># 以下每一种Field分别代表数据库中一种不同的数据属性</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StringField</span>(<span class="hljs-params">Field</span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name=<span class="hljs-literal">None</span>, primary_key=<span class="hljs-literal">False</span>, default=<span class="hljs-literal">None</span>, ddl=<span class="hljs-string">&#x27;varchar(100)&#x27;</span></span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(name, ddl, primary_key, default)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BooleanField</span>(<span class="hljs-params">Field</span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name=<span class="hljs-literal">None</span>, default=<span class="hljs-literal">False</span></span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(name, <span class="hljs-string">&#x27;boolean&#x27;</span>, <span class="hljs-literal">False</span>, default)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IntegerField</span>(<span class="hljs-params">Field</span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name=<span class="hljs-literal">None</span>, primary_key=<span class="hljs-literal">False</span>, default=<span class="hljs-number">0</span></span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(name, <span class="hljs-string">&#x27;bigint&#x27;</span>, primary_key, default)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FloatField</span>(<span class="hljs-params">Field</span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name=<span class="hljs-literal">None</span>, primary_key=<span class="hljs-literal">False</span>, default=<span class="hljs-number">0.0</span></span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(name, <span class="hljs-string">&#x27;real&#x27;</span>, primary_key, default)<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TextField</span>(<span class="hljs-params">Field</span>):</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name=<span class="hljs-literal">None</span>, default=<span class="hljs-literal">None</span></span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(name, <span class="hljs-string">&#x27;text&#x27;</span>, <span class="hljs-literal">False</span>, default)<br><br><br><span class="hljs-comment">#定义元类，控制Model对象的创建</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ModelMetaclass</span>(<span class="hljs-params"><span class="hljs-built_in">type</span></span>):</span><br>    <span class="hljs-comment"># 调用__init__方法前会调用__new__方法</span><br>    <span class="hljs-comment"># 1.当前准备创建的类的对象  2.类的名字 3.类继承的父类集合 4.类的方法集合</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__new__</span>(<span class="hljs-params">cls, name, bases, attrs</span>):</span><br>        <span class="hljs-keyword">if</span> name == <span class="hljs-string">&#x27;Model&#x27;</span>:      <span class="hljs-comment">#排除掉对Model类（基类）的修改</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">type</span>.__new__(cls, name, bases, attrs)<br>        <span class="hljs-comment"># 如果没设置__table__属性，tablename就是类的名字</span><br>        tableName = attrs.get(<span class="hljs-string">&#x27;__table__&#x27;</span>, <span class="hljs-literal">None</span>) <span class="hljs-keyword">or</span> name<br>        logging.info(<span class="hljs-string">&#x27;found model: %s (table: %s)&#x27;</span> % (name, tableName))<br>        mappings = &#123;&#125;    <span class="hljs-comment">#保存映射关系</span><br>        fields = []      <span class="hljs-comment">#保存除主键外的属性</span><br>        primarykey = <span class="hljs-literal">None</span><br>        <span class="hljs-comment"># 键是列名，值是field子类</span><br>        <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> attrs.items():<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(v, Field):<br>                logging.info(<span class="hljs-string">&#x27;  found mapping: %s ==&gt; %s&#x27;</span> % (k, v))<br>                <span class="hljs-comment"># 把键值对存入mapping字典中</span><br>                mappings[k] = v<br>                <span class="hljs-keyword">if</span> v.primary_key:<br>                    <span class="hljs-comment">#找到主键</span><br>                    <span class="hljs-keyword">if</span> primarykey:<br>                        <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&#x27;Duplicate primary key for field: %s&#x27;</span> % k)<br>                    primarykey = k  <span class="hljs-comment">#此列设为列表的主键</span><br>                <span class="hljs-keyword">else</span>:<br>                    fields.append(k)  <span class="hljs-comment">#保存除主键外的属性</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> primarykey:<br>            <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&#x27;Primary key not found.&#x27;</span>)<br>        <span class="hljs-comment"># 删除类属性</span><br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> mappings.keys():<br>            attrs.pop(k)  <span class="hljs-comment">#从类属性中删除Field属性,否则，容易造成运行时错误（实例的属性会遮盖类的同名属性）</span><br>        <span class="hljs-comment"># 保存除主键外的属性名为``（运算出字符串）列表形式</span><br>        escaped_fields = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> f: <span class="hljs-string">&#x27;`%s`&#x27;</span> % f, fields))<br>        attrs[<span class="hljs-string">&#x27;__mappings__&#x27;</span>] = mappings  <span class="hljs-comment"># 保存属性和列的映射关系</span><br>        attrs[<span class="hljs-string">&#x27;__table__&#x27;</span>] = tableName  <span class="hljs-comment"># 表的名字</span><br>        attrs[<span class="hljs-string">&#x27;__primary_key__&#x27;</span>] = primarykey  <span class="hljs-comment"># 主键属性名</span><br>        attrs[<span class="hljs-string">&#x27;__fields__&#x27;</span>] = fields  <span class="hljs-comment"># 除主键外的属性名</span><br>        <span class="hljs-comment"># 反引号和repr()函数功能一致</span><br>        attrs[<span class="hljs-string">&#x27;__select__&#x27;</span>] = <span class="hljs-string">&#x27;select `%s`, %s from `%s`&#x27;</span> % (primarykey, <span class="hljs-string">&#x27;, &#x27;</span>.join(escaped_fields), tableName)<br>        attrs[<span class="hljs-string">&#x27;__insert__&#x27;</span>] = <span class="hljs-string">&#x27;insert into `%s` (%s, `%s`) values (%s)&#x27;</span> % (<br>        tableName, <span class="hljs-string">&#x27;, &#x27;</span>.join(escaped_fields), primarykey, create_args_string(<span class="hljs-built_in">len</span>(escaped_fields) + <span class="hljs-number">1</span>))<br>        attrs[<span class="hljs-string">&#x27;__update__&#x27;</span>] = <span class="hljs-string">&#x27;update `%s` set %s where `%s`=?&#x27;</span> % (<br>        tableName, <span class="hljs-string">&#x27;, &#x27;</span>.join(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> f: <span class="hljs-string">&#x27;`%s`=?&#x27;</span> % (mappings.get(f).name <span class="hljs-keyword">or</span> f), fields)), primarykey)<br>        attrs[<span class="hljs-string">&#x27;__delete__&#x27;</span>] = <span class="hljs-string">&#x27;delete from `%s` where `%s`=?&#x27;</span> % (tableName, primarykey)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">type</span>.__new__(cls, name, bases, attrs)<br><br><span class="hljs-comment">#***基类***Model</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Model</span>(<span class="hljs-params"><span class="hljs-built_in">dict</span>, metaclass=ModelMetaclass</span>):</span>    <span class="hljs-comment">#在参数处即指定了所依赖的元类</span><br>    <span class="hljs-comment">#也可在此处写  __metaclass__ = ModelMetaclass，与参数处效果相同</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, **kw</span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(**kw)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__getattr__</span>(<span class="hljs-params">self, key</span>):</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> self[key]<br>        <span class="hljs-keyword">except</span> KeyError:<br>            <span class="hljs-keyword">raise</span> AttributeError(<span class="hljs-string">r&quot;&#x27;Model&#x27; object has no attribute &#x27;%s&#x27;&quot;</span> % key)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__setattr__</span>(<span class="hljs-params">self, key, value</span>):</span><br>        self[key] = value<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getValue</span>(<span class="hljs-params">self, key</span>):</span><br>        <span class="hljs-comment">#返回对象的属性,如果没有对应属性则会调用__getattr__</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">getattr</span>(self, key, <span class="hljs-literal">None</span>)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getValueOrDefault</span>(<span class="hljs-params">self, key</span>):</span><br>        value = <span class="hljs-built_in">getattr</span>(self, key, <span class="hljs-literal">None</span>)<br>        <span class="hljs-keyword">if</span> value <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            field = self.__mappings__[key]<br>            <span class="hljs-keyword">if</span> field.default <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>                value = field.default() <span class="hljs-keyword">if</span> <span class="hljs-built_in">callable</span>(field.default) <span class="hljs-keyword">else</span> field.default<br>                logging.debug(<span class="hljs-string">&#x27;using default value for %s: %s&#x27;</span> % (key, <span class="hljs-built_in">str</span>(value)))<br>                <span class="hljs-comment"># 把默认属性设置进去</span><br>                <span class="hljs-built_in">setattr</span>(self, key, value)<br>        <span class="hljs-keyword">return</span> value<br><br><br>    <span class="hljs-comment"># 类方法的第一个参数是cls,而实例方法的第一个参数是self</span><br><span class="hljs-meta">    @classmethod</span><br><span class="hljs-meta">    @asyncio.coroutine</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">findAll</span>(<span class="hljs-params">cls, where=<span class="hljs-literal">None</span>, args=<span class="hljs-literal">None</span>, **kw</span>):</span><br>        <span class="hljs-string">&#x27; find objects by where clause. &#x27;</span><br>        sql = [cls.__select__]<br>        <span class="hljs-keyword">if</span> where:<br>            sql.append(<span class="hljs-string">&#x27;where&#x27;</span>)<br>            sql.append(where)<br>        <span class="hljs-keyword">if</span> args <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            args = []<br>        orderBy = kw.get(<span class="hljs-string">&#x27;orderBy&#x27;</span>, <span class="hljs-literal">None</span>)<span class="hljs-comment"># 语句中是否有orderBy参数</span><br>        <span class="hljs-keyword">if</span> orderBy:<br>            sql.append(<span class="hljs-string">&#x27;order by&#x27;</span>)<br>            sql.append(orderBy)<br>        limit = kw.get(<span class="hljs-string">&#x27;limit&#x27;</span>, <span class="hljs-literal">None</span>)<span class="hljs-comment"># 语句中是否有limit参数</span><br>        <span class="hljs-keyword">if</span> limit <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            sql.append(<span class="hljs-string">&#x27;limit&#x27;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(limit, <span class="hljs-built_in">int</span>):<br>                sql.append(<span class="hljs-string">&#x27;?&#x27;</span>)<br>                args.append(limit)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(limit, <span class="hljs-built_in">tuple</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(limit) == <span class="hljs-number">2</span>:<br>                sql.append(<span class="hljs-string">&#x27;?, ?&#x27;</span>)<br>                args.extend(limit)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&#x27;Invalid limit value: %s&#x27;</span> % <span class="hljs-built_in">str</span>(limit))<br>        rs = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> select(<span class="hljs-string">&#x27; &#x27;</span>.join(sql), args)<br>        <span class="hljs-keyword">return</span> [cls(**r) <span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> rs]<br><br><span class="hljs-meta">    @classmethod</span><br><span class="hljs-meta">    @asyncio.coroutine</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">findNumber</span>(<span class="hljs-params">cls, selectedField, where=<span class="hljs-literal">None</span>, args=<span class="hljs-literal">None</span></span>):</span><br>        <span class="hljs-string">&#x27; find number by select and where. &#x27;</span><br>        <span class="hljs-comment"># 将列名重命名为_num_，任何客户端都可以按照这个名称引用这个列，就像它是个实际的列一样</span><br>        sql = [<span class="hljs-string">&#x27;select %s _num_ from `%s`&#x27;</span> % (selectedField, cls.__table__)]<br>        <span class="hljs-keyword">if</span> where:<br>            sql.append(<span class="hljs-string">&#x27;where&#x27;</span>)<br>            sql.append(where)<br>        <span class="hljs-comment"># 限制结果数量为1</span><br>        rs = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> select(<span class="hljs-string">&#x27; &#x27;</span>.join(sql), args, <span class="hljs-number">1</span>)<br>        <span class="hljs-comment"># 1.将rs[0]转换成关键字参数元组，rs[0]为dict</span><br>        <span class="hljs-comment"># 2.通过&lt;class &#x27;__main__.User&#x27;&gt;(位置参数元组)，产生一个实例对象</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(rs) == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">return</span> rs[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;_num_&#x27;</span>]<br><br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find</span>(<span class="hljs-params">cls, pk</span>):</span><br>        <span class="hljs-string">&#x27; find object by primary key. &#x27;</span><br>        rs = <span class="hljs-keyword">await</span> select(<span class="hljs-string">&#x27;%s where `%s`=?&#x27;</span> % (cls.__select__, cls.__primary_key__), [pk], <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(rs) == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">return</span> cls(**rs[<span class="hljs-number">0</span>])<br><br><span class="hljs-meta">    @asyncio.coroutine</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">save</span>(<span class="hljs-params">self</span>):</span><br>        args = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(self.getValueOrDefault, self.__fields__))<br>        args.append(self.getValueOrDefault(self.__primary_key__))<br>        rows = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> execute(self.__insert__, args)<br>        <span class="hljs-keyword">if</span> rows != <span class="hljs-number">1</span>:<br>            logging.warn(<span class="hljs-string">&#x27;failed to insert record: affected rows: %s&#x27;</span> % rows)<br><br><span class="hljs-meta">    @asyncio.coroutine</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update</span>(<span class="hljs-params">self</span>):</span><br>        args = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(self.getValue, self.__fields__))<br>        args.append(self.getValue(self.__primary_key__))<br>        rows = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> execute(self.__update__, args)<br>        <span class="hljs-keyword">if</span> rows != <span class="hljs-number">1</span>:<br>            logging.warn(<span class="hljs-string">&#x27;failed to update by primary key: affected rows: %s&#x27;</span> % rows)<br><br><span class="hljs-meta">    @asyncio.coroutine</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">remove</span>(<span class="hljs-params">self</span>):</span><br>        args = [self.getValue(self.__primary_key__)]<br>        rows = <span class="hljs-keyword">yield</span> <span class="hljs-keyword">from</span> execute(self.__delete__, args)<br>        <span class="hljs-keyword">if</span> rows != <span class="hljs-number">1</span>:<br>            logging.warn(<span class="hljs-string">&#x27;failed to remove by primary key: affected rows: %s&#x27;</span> % rows)<br></code></pre></td></tr></table></figure><h1 id="3、编写MODEL"><a href="#3、编写MODEL" class="headerlink" title="3、编写MODEL"></a>3、编写MODEL</h1><p>参考链接：</p><blockquote><p>在ORM模块里我们编写了Model类，是一个基类，定义了一些基本的类方法。这次要写的Model是对昨天的Model再加工。</p></blockquote><p>须实现的功能</p><blockquote><p>定义User、Blog、Comment三个类与数据库表一一对应</p></blockquote><p>编写models.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time, uuid<br><br><span class="hljs-keyword">from</span> orm <span class="hljs-keyword">import</span> Model, StringField, BooleanField, FloatField, TextField<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">next_id</span>():</span>  <span class="hljs-comment">#定义随机生成id的方法，生成唯一标识符</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%015d%s000&#x27;</span> % (<span class="hljs-built_in">int</span>(time.time()*<span class="hljs-number">1000</span>), uuid.uuid4().<span class="hljs-built_in">hex</span>)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span>(<span class="hljs-params">Model</span>):</span><br>    __table__ = <span class="hljs-string">&#x27;users&#x27;</span><br><span class="hljs-comment"># 后面的id,email等会被实例的id,email覆盖</span><br>    <span class="hljs-built_in">id</span>=StringField(primary_key=<span class="hljs-literal">True</span>, default=next_id, ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    email = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    passwd = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    admin = BooleanField()<br>    name = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    image = StringField(ddl=<span class="hljs-string">&#x27;varchar(500)&#x27;</span>)<br>    created_at = FloatField(default=time.time)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Blog</span>(<span class="hljs-params">Model</span>):</span><br>    __table__ = <span class="hljs-string">&#x27;blogs&#x27;</span><br><br>    <span class="hljs-built_in">id</span> = StringField(primary_key=<span class="hljs-literal">True</span>, default=next_id, ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    user_id = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    user_name = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    user_image = StringField(ddl=<span class="hljs-string">&#x27;varchar(500)&#x27;</span>)<br>    name = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    summary = StringField(ddl=<span class="hljs-string">&#x27;varchar(200)&#x27;</span>)<br>    content = TextField()<br>    created_at = FloatField(default=time.time)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Comment</span>(<span class="hljs-params">Model</span>):</span><br>    __table__ = <span class="hljs-string">&#x27;comments&#x27;</span><br><br>    <span class="hljs-built_in">id</span> = StringField(primary_key=<span class="hljs-literal">True</span>, default=next_id, ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    blog_id = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    user_id = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    user_name = StringField(ddl=<span class="hljs-string">&#x27;varchar(50)&#x27;</span>)<br>    user_image = StringField(ddl=<span class="hljs-string">&#x27;varchar(500)&#x27;</span>)<br>    content = TextField()<br>    created_at = FloatField(default=time.time)<br></code></pre></td></tr></table></figure><p>测试能否通过Model操作对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">import</span> orm<br><span class="hljs-comment">#测试部分</span><br><span class="hljs-keyword">if</span> __name__== <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span>():</span><br>        <span class="hljs-keyword">await</span> orm.create_pool(loop,user=<span class="hljs-string">&#x27;www-data&#x27;</span>, password=<span class="hljs-string">&#x27;www-data&#x27;</span>, db=<span class="hljs-string">&#x27;awesome&#x27;</span>)<br>        u = User(name=<span class="hljs-string">&#x27;Test&#x27;</span>, email=<span class="hljs-string">&#x27;test@example.com&#x27;</span>, passwd=<span class="hljs-string">&#x27;123456780&#x27;</span>, image=<span class="hljs-string">&#x27;about:blank&#x27;</span>)<br>        <span class="hljs-keyword">await</span> u.save()<br>        a = <span class="hljs-keyword">await</span> u.findAll() <span class="hljs-comment">#这个要打印才显示出来</span><br>        <span class="hljs-built_in">print</span>(a)<br><br>    loop = asyncio.get_event_loop()<br>    loop.run_until_complete(test())<br>    orm.__pool.close()  <span class="hljs-comment">#在关闭event loop之前，首先需要关闭连接池。</span><br>    loop.run_until_complete(orm.__pool.wait_closed())<span class="hljs-comment">#在关闭event loop之前，首先需要关闭连接池。</span><br>    loop.close()<br></code></pre></td></tr></table></figure><p>测试结果输出如下：</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[&#123;<span class="hljs-symbol">&#x27;id</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-symbol">&#x27;00162858233058916dc6a94ffda491dbd64e2359d6ae106000</span>&#x27;, <span class="hljs-symbol">&#x27;email</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-symbol">&#x27;tast@example.com</span>&#x27;, <span class="hljs-symbol">&#x27;passwd</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-symbol">&#x27;123456780</span>&#x27;, <span class="hljs-symbol">&#x27;admin</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-number">0</span>, <span class="hljs-symbol">&#x27;name</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-symbol">&#x27;Test</span>&#x27;, <span class="hljs-symbol">&#x27;image</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-symbol">&#x27;about:blank</span>&#x27;, <span class="hljs-symbol">&#x27;created_at</span><span class="hljs-symbol">&#x27;:</span> <span class="hljs-number">1628582330.58906</span>&#125;]<br></code></pre></td></tr></table></figure><p><strong>代码解析：</strong></p><p><a href="https://github.com/Ah-yuan/MyWebAPP">Ah-yuan/MyWebAPP: python项目实战解析 (github.com)</a></p><p><strong>参考链接：</strong></p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400">Python教程</a></p><p><a href="https://github.com/cuizichenghome/MyWebAPP">Python教程项目实战代码注释</a></p><p><a href="https://blog.csdn.net/josephpai/category_7049397.html">Python实战</a></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python实战(廖雪峰)</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
